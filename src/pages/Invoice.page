<!--
 * @author           Gnana Prakash
 * @version          1.0 
 * @date             06-Jan-2016
 * @Status           Developed
 * @description      This is the class for the Invoice Upload/Modify/Delete page.
 -->
<apex:page controller="ODS_Invoicepagecontroller" sidebar="false" showHeader="false" standardStylesheets="false">
    <head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7; IE=EDGE" />
    <meta http-equiv="content-type" content="text/html;charset=Windows-1252"/>
    
    <!-------- Bootstrap ----->
    <link href="{!URLFOR($Resource.ODS_Assets,'css/bootstrap.css')}" rel="stylesheet" type="text/css" />
    <script src="{!URLFOR($Resource.ODS_Assets,'js/bootstrap.js')}" type="text/javascript"></script>
    
    
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet"/>
    <script src='https://www.google.com/recaptcha/api.js'></script>

    <link href="{!URLFOR($Resource.ODS_Assets,'css/style.css')}" rel="stylesheet" type="text/css"  />
    <link href="{!URLFOR($Resource.ODS_Assets,'css/style_dev.css')}" rel="stylesheet" type="text/css"  />
    <apex:stylesheet value="{!URLFOR($Resource.ODS_Assets,'css/jquery-ui.css')}"/>
    
    <script src="https://mottie.github.io/tablesorter/docs/js/jquery-latest.min.js" type="text/javascript"></script>
    <script src="https://mottie.github.io/tablesorter/js/jquery.tablesorter.js" type="text/javascript"></script>
    <link class="user" href="https://mottie.github.io/tablesorter/css/theme.blue.css" rel="stylesheet" type="text/css" />
        
        
      

     
    <script type="text/javascript">
        $(document).ready(function(){
            //document.getElementById('{!$Component.formId:picklistMonth}').value = "Month";       
            //document.getElementById('{!$Component.formId:picklistYear}').value = "Year"; 
            $(".advnc_search input[type=text]").css("width","22% !important");
            $("#Invoice").addClass("active");
            var IsCustomer = {!isCustomer};        
            if(IsCustomer){
               
                $("#mnuMyAccount").css("display","block");   
                
                //$(".ApplyBtn").css("display","none");   
             }else{
                       
                $("#mnuCustomer").css("display","block");
            }
             //Search popup
            $('.tsearch').click(function(){
                $('.advnc_search').slideToggle('fast');
            });
            $("button.collapsed").click(function(){
                $(".header").toggleClass("header-fixed");
                $(".navbar-toggle").toggleClass("nav-btn-fixed");
                $(".mid-bg").toggleClass("mid-bg-fixed");
            }); 
            
            ApplySearch();
        });
        
        //Function to make control number numeric only
        function isNumberKey(evt) {
        
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
        
            return true;
        }
        function ApplySearch(){
            debugger;
            var AccountID = $(".ddlstAccount").val();
            var ServiceID = $(".ddlstService").val();   
            
            /*if(AccountID == 'All' || ServiceID == 'All')   
            {
                //document.getElementById('{!$Component.formId.btnUpload}').className = "hideClass";
                document.getElementById('{!$Component.formId.btnUpload}').style.visibility = 'hidden';
            
            } 
            else
            {
               //document.getElementById('{!$Component.formId.btnUpload}').className = "save-submit";
               document.getElementById('{!$Component.formId.btnUpload}').style.visibility = 'visible';
            }*/
            var isCustomerGrid = {!isCustomerGrid};       
            if(isCustomerGrid){
                $(".ddlstAccount").css("display","none"); 
                $(".ddlstService").css("display","none");
                //$(".ApplyBtn").css("display","none");
            }
            ApplySearchAction(AccountID,ServiceID);
        } 
        
         function fnSearchInvoice(){
            //var FromDate = $('.tfrom_date').val();
           // var ToDate = $('.tto_date').val();
            debugger;
            var AccountID = $(".ddlstAccount").val();
            var ServiceID = $(".ddlstService").val();
            var Month = document.getElementById('{!$Component.formId.picklistMonth}').value.trim();
            var Year = document.getElementById('{!$Component.formId.picklistYear}').value.trim();
            if(Year == 'Year'){
                Year = 0;
            }
            GetSearchResultsFromAjax(AccountID,ServiceID,Month,Year);
               GetSearchResultsFromAjax1(AccountID,ServiceID,Month,Year);
        }
        
         function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (!(charCode > 31 && (charCode < 48 || charCode > 57) && charCode ==91 )) {
                return false;
            }
                return true;
         }
         
        function changeService()
        {
            var customerServiceId = $(".ddlstCustomerService").val();
            ApplyChangeService(customerServiceId);
        }  
        var errorMessage = '';
        var isValidFileType = true;
        var isValidInvoice = true;
        
        function UploadInvoice()
        {
           document.getElementById('{!$Component.modalForm.uploadInvoice}').value = "ADD";
           document.getElementById('{!$Component.modalForm.InvoiceId}').value = "";
           $("#divErrorMessageFileType").text("");
           ResetFields();
           return false;
        }
        
        function ValidateMonthYear()
        {
            var Month = document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').value;
            var Year = document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').value;            
            document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "drop-doc";                            
            document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "drop-doc"; 
             $("#divErrorMessageFileType").text("");
                       
            var dateObj = new Date();
            var currentMonth = dateObj.getUTCMonth() + 1; //months from 1-12
            var currentYear = dateObj.getUTCFullYear(); 
            debugger;               
            if(Month == 'Month')
            {
                document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "mandatoryClass drop-doc";    
                $("#divErrorMessageFileType").text("Please select Month");
            }
            else if(Year == 'Year')
            {
                document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "mandatoryClass drop-doc";    
                $("#divErrorMessageFileType").text("Please select Year ");
            }
            return false;
        } 
        
        function ValidateInvoiceDetails()
        {
            debugger;
            document.getElementById('{!$Component.modalForm.uploadInvoice}').disabled = true;
            errorMessage ='';            
            var Month = document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').value;
            var Year = document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').value;
            var uploadFile = document.getElementById('{!$Component.modalForm.uploadFile}').value;
            var InvoiceId = document.getElementById('{!$Component.modalForm.InvoiceId}').value;
            document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "drop-doc";                            
            document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "drop-doc"; 
                       
            var dateObj = new Date();
            var currentMonth = dateObj.getUTCMonth() + 1; //months from 1-12
            var currentYear = dateObj.getUTCFullYear(); 
            debugger;               
            if(Month == 'Month' && Year == 'Year' ){
                document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "mandatoryClass drop-doc";                            
                document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "mandatoryClass drop-doc";                            
                $("#divErrorMessageFileType").text("Please select Year & Month");                
            }
            else if(Month == 'Month')
            {
                document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "mandatoryClass drop-doc";    
                $("#divErrorMessageFileType").text("Please select Month");
            }
            else if(Year == 'Year')
            {
                document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "mandatoryClass drop-doc";    
                $("#divErrorMessageFileType").text("Please select Year ");
            }
            else if(getMonthFromString(Month) > currentMonth && Year == currentYear)
            {
                document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "mandatoryClass drop-doc";                            
                document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "mandatoryClass drop-doc";                            
                $("#divErrorMessageFileType").text("Sorry, you cannot select upcoming months.");    
            }
            else
            {  
            
                document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "drop-doc";                            
                document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "drop-doc"; 
                document.getElementById('{!$Component.modalForm.uploadInvoice}').disabled = false;
                                          
                if(InvoiceId == '')
                {
                    if(IsInputEmpty('{!$Component.modalForm.uploadFile}'))
                    {
                        document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "drop-doc";                            
                        document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "drop-doc";
                        isValidInvoice = false;
                    }
                }            
                if(uploadFile != '')
                {
                    $("#divErrorMessageFileType").text("");
                        var validFiles = '{!$Label.ODS_InvoiceExtenstion}';
                        var splitFileExtensions = validFiles.split(',');
                        var fileExtension = uploadFile.substr(uploadFile.lastIndexOf('.') + 1);
                       for(var i = 0; i < splitFileExtensions .length; i++) {
                         
                         if(fileExtension == splitFileExtensions[i])
                         {
                             isValidFileType = true;
                             break;
                         }
                         else
                         {
                             isValidFileType = false;
                         }
                      }
                      debugger;
                      if(isValidFileType ==false)
                      {
                        isValidInvoice = false;
                        
                        document.getElementById('{!$Component.modalForm.uploadFile}').className = "mandatoryClass";                            
                        $("#divErrorMessageFileType").text("Invalid File Type!");
                           
                      }
                      else
                      {                          
                          var fileUpload = document.getElementById('{!$Component.modalForm.uploadFile}');
                          if (typeof (fileUpload.files) != "undefined") {
                              if(parseFloat(fileUpload.files[0].size / 1024).toFixed(2) > 5000){
                                  isValidDocument = false;
                                  document.getElementById('{!$Component.modalForm.uploadFile}').className = "mandatoryClass";                            
                                  $("#divErrorMessageFileType").text("File size greater than 5MB");
                                  return false;
                              }
                              else{
                                   isValidInvoice = true;
                                   $("#divErrorMessageFileType").text("");
                              }
                          }
    
                      }
                      document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "drop-doc";                            
                      document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "drop-doc";
                }
                debugger;
                       
               ValidateUploadInvoice();
               debugger;
               if(uploadFile == '')
               {   
                  document.getElementById('{!$Component.modalForm.uploadInvoice}').disabled = false;
    
               }
           }
           document.getElementById('{!$Component.modalForm.uploadInvoice}').disabled = false;
           return false;
           
        } 
        
      function ValidateUploadInvoice() {
        debugger;
      var InvoiceId = document.getElementById('{!$Component.modalForm.InvoiceId}').value;
      var accountId = $(".ddlstAccount").val();
      var serviceId = $(".ddlstService").val();
      
      var fileName = document.getElementById('{!$Component.modalForm.uploadFile}').value.replace(/^.*[\\\/]/, '')
       debugger;
      
      $("#divErrorMessageFileName").text("");
        Visualforce.remoting.Manager.invokeAction(

            '{!$RemoteAction.ODS_Invoicepagecontroller.ValidateUploadInvoice}',

            accountId, serviceId, fileName, InvoiceId,

            function(result, event){
              var uploadFile = document.getElementById('{!$Component.modalForm.uploadFile}').value;

                    
                if (event.status) {
                
                   if(result == "" && isValidInvoice ==true )
                   {       
                      $("#divErrorMessage").text("");
                      document.getElementById('{!$Component.modalForm.uploadDisableButton}').click();
                     document.getElementById('btnUploadClose').click();

                      $("#divLoader").css("display","block");

                      return false;
                   }
                   else
                   {
                       debugger;
                       document.getElementById('{!$Component.modalForm.uploadInvoice}').disabled = false;
                   }                

                    
                   if(result.indexOf("File")  > -1)
                   {  
                       document.getElementById('{!$Component.modalForm.uploadFile}').className = "mandatoryClass"; 
                       $("#divErrorMessageFileName").text("File Name Already Exists!");
                   }
                   else
                   {
                       $("#divErrorMessageFileName").text("");

                   }
                   
                   
                   $("#divErrorMessage").text(errorMessage);

                } else if (event.type === 'exception') {

                    //alert('Exception Occured');

                } else {

                    //alert('Exception Occured');

                }

            },

            {escape: true}

        );
    }  
     
          function BlockSpecialCharacter(key){
          var keycode = (key.which) ? key.which : key.keyCode;
            if ((keycode >= 65 && keycode <= 90) || (keycode >= 97 && keycode <= 122) || (keycode >= 48 && keycode <= 57) || keycode == 32 || keycode == 95)
              return true;
            else
              return false;
        }
        
        function IsInputEmpty(inputName) {
    
            var inputControl = document.getElementById(inputName).value;
            if ($.trim(inputControl) =="") {
                document.getElementById(inputName).className = "mandatoryClass";
                $("#divErrorMessageFileType").text("Please select a file");
                return true;
            }
            else {
                document.getElementById(inputName).className = "";
                $("#divErrorMessageFileType").text("");
                return false;
            }
      }
      
      function DownloadInvoice(attachmentId)
      {
          debugger;
          var base_url = window.location.origin;
          if (!window.location.origin) {
             base_url  = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
            }
          var win = window.open(base_url +'/servlet/servlet.FileDownload?file='+attachmentId, '_blank');
          win.focus();
      }
      
      function EditInvoiceUpload(InvoiceId)
      {
          debugger;
        document.getElementById('{!$Component.modalForm.uploadInvoice}').value = "UPDATE";
        
        $("#divErrorMessageFileType").text("");
        $("#divErrorMessageFileName").text("");
        debugger;
        ResetFields();
        Visualforce.remoting.Manager.invokeAction(

            '{!$RemoteAction.ODS_Invoicepagecontroller.GetInvoiceAttachment}',

            InvoiceId,

            function(result, event){
                           debugger;
            var jsonResult = result.split('$$##');
                      
            var InvoiceJson = jsonResult[0].replace(/(&quot\;)/g,"\"");
            InvoiceJson = $.parseJSON(InvoiceJson);  
            
            //var attachmentJson = jsonResult[1].replace(/(&quot\;)/g,"\"");
            //attachmentJson = $.parseJSON(attachmentJson);  
            
                if (event.status) {
                
                console.log(InvoiceJson);
                 //console.log(attachmentJson);
                 
          document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').value = InvoiceJson[0].Month__c;
          document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').value = InvoiceJson[0].Year__c;
          if(InvoiceJson[0].Comments__c != undefined){
              document.getElementById('{!$Component.modalForm.uploadInvoiceComments}').value = InvoiceJson[0].Comments__c;
          }
          document.getElementById('{!$Component.modalForm.InvoiceId}').value = InvoiceJson[0].Invoice_ID__c;
          
          //var fullFileName = attachmentJson.Name;
          //var uniqueFileName = fullFileName.split('_');
          //document.getElementById('{!$Component.modalForm.editedFileName}').value = uniqueFileName[uniqueFileName.length-1];
          

                } else if (event.type === 'exception') {

                    alert('Exception Occured');

                } else {

                    alert('Exception Occured');

                }

            },

            {escape: true}

        );
      }
      
      function ResetFields()
      {
          document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').value = "Month";
          document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').value = "Year";
          document.getElementById('{!$Component.modalForm.uploadInvoiceComments}').value = "";
          //document.getElementById('{!$Component.modalForm.attachmentId}').value = "";
          document.getElementById('{!$Component.modalForm.InvoiceId}').value = "";
          document.getElementById('{!$Component.modalForm.uploadFile}').value = "";
          $("#divErrorMessageFileType").text("");
          $("#divErrorMessageFileName").text("");

          
          document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').className = "drop-doc";
          document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').className = "drop-doc";
          document.getElementById('{!$Component.modalForm.uploadInvoiceComments}').className = "";
          //document.getElementById('{!$Component.modalForm.attachmentId}').className = "";
          document.getElementById('{!$Component.modalForm.uploadFile}').className = "";
          return false;
       }
       
       function DeleteInvoiceUpload(InvoiceId)
       { 
           debugger;
           var result = confirm("Are you sure want to delete this Invoice");
                    if (result) {
                           DeleteInvoice(InvoiceId);
                          // window.location.reload();
                    }      
           //debugger;
           //DeleteInvoice(InvoiceId);
           //window.location.reload();
       }
       
     function DeleteInvoiceCompleted()
       {
           //alert('DeleteDocumentCompleted');
           ApplySearch();
           
       }
       
        function ValidateInvoiceMonthYear() {
            debugger;
            var Month = document.getElementById('{!$Component.modalForm.uploadInvoiceMonth}').value;
            var Year = document.getElementById('{!$Component.modalForm.uploadInvoiceYear}').value;
            
            var dateObj = new Date();
            var currentMonth = dateObj.getUTCMonth() + 1; //months from 1-12
            var currentYear = dateObj.getUTCFullYear(); 
            if(getMonthFromString(Month) > currentMonth && Year == currentYear)
            {
                alert('Sorry, you cannot select upcoming months.');
                return false;
            }
            return false;
        }
        
        function getMonthFromString(mon){
           return new Date(Date.parse(mon +" 1, 2012")).getMonth()+1
        }
        
       
        
                 
    </script>
    
    <style>
    .hideClass{
      display:none;
    }
    .mandatoryClass{
        border-color:red !important;
    }
            .popupBackground {
                /* Background color */
                background-color:black;
                opacity: 0.20;
                filter: alpha(opacity = 20);
            
                /* Dimensions */
                width: 100%;
                height: 100%;
                top: 0;
                left: 0;
                z-index: 998;
                position: absolute;
                font-family: sans-serif;
                /* Mouse */
                cursor:wait;
            }
         
            /* This is for the message DIV */
            .PopupPanel {
                /* Background color */
                border: solid 2px skyblue;
                background-color: white;
                font-family: sans-serif;
                /* Dimensions */
                left: 50%;
                width: 100px;
                margin-left: -100px;
                top: 50%;
                height: 100px;
                margin-top: -25px;
                z-index: 999;
                position: fixed;
                
                /* Mouse */
                cursor:pointer;
            }
            .document-search input[type="text"]{ width: 21%;}
            
          .filterMatches{
              background-color: #BFFF00;
            }
            .tertiaryPalette{
              color: #000 !important;
            }
            .dt-buttons{
              margin-left: 10px;
            }
            
            
            
            table{
              border-collapse:collapse;
              border:none;
            }
            th{
              background-color:#C8C8C8;
              cursor:pointer;
            }  
       
        </style>
    
        <style>
         .mainTitle{font-size:23px}

    .mandatoryClass{
        border-color:red !important;
    }
    .name   {
    color: #fff;
    }
        </style>
    <!-------- Fonts Awesome ----->
    <link href="{!URLFOR($Resource.ODS_Assets,'font-awesome/css/font-awesome.css')}" rel="stylesheet" type="text/css"  />
    
    <title>ON DEMAND SERVICES </title>
    </head>

    <body>
        <apex:form id="formId">
        <div class="shadow-show"></div>   
        <div id="divLoader" style="display:none;">
    <div class="popupBackground" />
    <div class="PopupPanel">
        <table border="0" width="100%" height="100%">
            <tr>
                <td align="center"><b>Please Wait</b></td>
            </tr>
            <tr>
                <td align="center"><img src="{!$Resource.ODS_Statussign}"/></td>
            </tr>
        </table>
    </div>
</div>
            <c:ODS_HeaderComponent />
            <apex:actionStatus id="statusSaveTrip" stopText="">
                <apex:facet name="start">
                    <div>
                        <div class="popupBackground" />
                        <div class="PopupPanel">
                            <table border="0" width="100%" height="100%">
                                <tr>
                                    <td align="center"><b>Please Wait</b></td>
                                </tr>
                                <tr>
                                    <td align="center"><img src="{!$Resource.ODS_Statussign}"/></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </apex:facet>
            </apex:actionStatus>
    <apex:actionFunction name="ApplySearchAction" action="{!GetCustomerByAccountServiceID}" status="statusSaveTrip" reRender="outPnlCustGrid, searchPanelId, noSearchRec, UploadInvoicePanel, AddInvDisclaimer" immediate="true" >
                <apex:param name="AccountId" value="" assignTo="{!AccountId}"/>
                <apex:param name="ServiceID" value="" assignTo="{!ServiceID}"/>      
    </apex:actionFunction>
    
     <apex:actionFunction name="GetSearchResultsFromAjax" action="{!GetSearchResults}" reRender="SearchResultsPanel,searchPanelId,outPnlCustGrid, UploadInvoicePanel" status="statusSaveTrip" immediate="true">
               <!--<apex:param name="FromDt" value="" assignTo="{!FromDate}"/>
                <apex:param name="ToDt" value="" assignTo="{!ToDate}"/>-->
                <apex:param name="AccountId" value="" assignTo="{!AccountId}"/>
                <apex:param name="ServiceID" value="" assignTo="{!ServiceID}"/> 
                <apex:param name="Month" value="" assignTo="{!Month}"/>
                <apex:param name="Year" value="" assignTo="{!Year}"/>
                
    </apex:actionFunction>
       <!--      <apex:actionFunction name="GetSearchResultsFromAjax" action="{!FetchInvoiceList}" reRender="SearchResultsPanel,searchPanelId,outPnlCustGrid, UploadInvoicePanel" status="statusSaveTrip" immediate="true">
               <!--<apex:param name="FromDt" value="" assignTo="{!FromDate}"/>
                <apex:param name="ToDt" value="" assignTo="{!ToDate}"/>
                <apex:param name="AccountId" value="" assignTo="{!AccountId}"/>
                <apex:param name="ServiceID" value="" assignTo="{!ServiceID}"/> 
                <apex:param name="Month" value="" assignTo="{!Month}"/>
                <apex:param name="Year" value="" assignTo="{!Year}"/>
                
     </apex:actionFunction> -->
            
        <!--    <apex:actionFunction name="GetSearchResultsFromAjax1" action="{!FetchInvoiceList}" reRender="SearchResultsPanel,searchPanelId,outPnlCustGrid, UploadInvoicePanel" status="statusSaveTrip" immediate="true">
               <apex:param name="FromDt" value="" assignTo="{!FromDate}"/>
                <apex:param name="ToDt" value="" assignTo="{!ToDate}"/>
               <apex:param name="AccountId" value="{!AccountId}" />
                <apex:param name="ServiceID" value="{!ServiceID}"/> 
                <apex:param name="Month" value="{!Month}"/>
                <apex:param name="Year" value="{!Year}"/>
              <apex:param name="AccountId" value="" assignTo="{!AccountId}"/>
                <apex:param name="ServiceID" value="" assignTo="{!ServiceID}"/> 
                <apex:param name="Month" value="" assignTo="{!Month}"/>
                <apex:param name="Year" value="" assignTo="{!Year}"/> 
                
     </apex:actionFunction> -->
     <apex:actionFunction name="AddInvoiceFunction" action="{!UploadInvoice}" reRender="SearchResultsPanel,outPnlCustGrid, searchPanelId, noSearchRec" status="statusSaveTrip">
               <apex:param name="InvoiceId" value="" assignTo="{!UniqueInvoiceId }"/>              
     </apex:actionFunction>
     
     <apex:actionFunction name="DeleteInvoice" action="{!DeleteInvoice}" immediate="true" oncomplete="DeleteInvoiceCompleted();" reRender="SearchResultsPanel,outPnlCustGrid, searchPanelId, noSearchRec" status="statusSaveTrip">
               <apex:param name="InvoiceId" value="" assignTo="{!UniqueInvoiceId}"/>              
     </apex:actionFunction>    
          
       <div class="clr"></div>
            <div class="mnu navbar-default"><button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#prelude_mnu"><i class="fa fa-bars" aria-hidden="true"></i></button>
        </div>
        <div class="clr"></div>
            
        <div class="mid-bg">
            <div class="sub-warp">                
                <div class="top_srch">
                    <h1><!-- Invoice--></h1>
                    <div class="tsearch">Search<i class="fa fa-search" aria-hidden="true"></i></div>
                    <div class="advnc_search document-search">
                        <div>  
                            <apex:selectList value="{!Invoice.Month__c}" id="picklistMonth" size="1" styleClass="drop-doc Month" onchange="ValidateInvoiceMonthYear();">
                            <apex:selectOption itemLabel="Month" itemValue="Month"></apex:selectOption>
                            <apex:selectOption itemLabel="January" itemValue="January"></apex:selectOption>
                            <apex:selectOption itemLabel="February" itemValue="February"></apex:selectOption>
                            <apex:selectOption itemLabel="March" itemValue="March"></apex:selectOption>
                            <apex:selectOption itemLabel="April" itemValue="April"></apex:selectOption>
                            <apex:selectOption itemLabel="May" itemValue="May"></apex:selectOption>
                            <apex:selectOption itemLabel="June" itemValue="June"></apex:selectOption>
                            <apex:selectOption itemLabel="July" itemValue="July"></apex:selectOption>
                            <apex:selectOption itemLabel="August" itemValue="August"></apex:selectOption>
                            <apex:selectOption itemLabel="September" itemValue="September"></apex:selectOption>
                            <apex:selectOption itemLabel="October" itemValue="October"></apex:selectOption>
                            <apex:selectOption itemLabel="November" itemValue="November"></apex:selectOption>
                            <apex:selectOption itemLabel="December" itemValue="December"></apex:selectOption>
                        </apex:selectList>
                        <apex:selectList styleClass="drop-doc Year"  id="picklistYear" value="{!Invoice.Year__c}" html-placeholder="Year" size="1" onchange="ValidateInvoiceMonthYear();">
                        <apex:selectOptions value="{!Years}" />
                        </apex:selectList>    
                                                   
                            <!--<input type="text" name="txt_from" class="tfrom_date" placeholder="From Date" id="date_service" onkeypress="return isNumber(event)" autocomplete = "off"/>  
                            
                            <input type="text" name="txt_to" class="tto_date" placeholder="To Date" id="date_service1" onkeypress="return isNumber(event)" autocomplete = "off" />-->                                
                                                                
                            <input type="button" onclick="fnSearchInvoice();"  value="Search" style="background: #4ECAF4;float: left;padding: 5px 20px;color: #fff;font-weight: bold;border-radius: 5px;border: navajowhite;margin-top: 10px;margin-left: 15px;"/>
                        </div>
                    </div>
                </div>  
                    </div>
                </div>  
<apex:outputPanel id="outPnlCustGrid" rendered="{!NOT(isCustomerGrid)}">
<div class="clr"></div>
<div class="mid-bg">
    <div class="sub-warp">
        <h1 style="float:left;"><!-- Customers List--></h1>
             
        <div class="mid-white">
           <div class="timeline-scroll">     
             <apex:outputPanel id="noSearchRec" rendered="{!(InvoiceList.size==0 && InvoiceList!=null ) }">
                <strong><center>No Records Found.</center></strong>
           </apex:outputPanel> 
            <apex:outputPanel id="searchPanelId">     
                  
               <apex:pageBlock id="pgblckCustGrid" rendered="{!NOT(ISNULL(invoiceList))}" >
                    
                   <apex:pageBlockTable StyleClass="timeline customer-width" Style="cellpadding:0; cellspacing:0; width:100%;"  value="{!invoiceList}" var="rec"
                           first="{!CurrentPage }" rows="{!PageSize}" rendered="{!(invoiceList.size !=0 && invoiceList!='' && InvoiceList!=null ) }" >     
                       <!--    <apex:column headerValue="INVOICE DATE" value="{!rec.Month__c},{!rec.Year__c}" style="text-align:left;">
                       <apex:facet name="header">
                                            <apex:commandLink action="{!FetchInvoiceList}" reRender="pgblckCustGrid" value="INVOICE DATE{!IF(sortExpression=='Year__c',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="Year__c" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                       </apex:column>
                       <apex:column headerValue="Account" value="{!rec.Account_Services__r.Account__r.Name} - {!rec.Account_Services__r.ODS_Service_Name__c}" style="text-align:left;">
                       <apex:facet name="header">
                                            <apex:commandLink action="{!FetchInvoiceList}" reRender="pgblckCustGrid" value="Account{!IF(sortExpression=='Account_Services__r.Account__r.Name',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="Account_Services__r.Account__r.Name" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                       </apex:column> -->
                       
                       <apex:column headerValue="INVOICE DATE" value="{!rec.Month__c},{!rec.Year__c}">
                                        <apex:facet name="header">
                                            <apex:commandLink styleClass="name" action="{!fetchInvoiceListCommnadLink}" immediate="true" reRender="pgblckCustGrid" value="INVOICE DATE{!IF(sortExpression=='Month__c,Year__c',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="Month__c,Year__c" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                                    </apex:column>
                       <apex:column value="{!rec.Account_Services__r.Account__r.Name}" >
                                        <apex:facet name="header">
                                            <apex:commandLink action="{!fetchInvoiceListCommnadLink}" styleClass="name" immediate="true" reRender="pgblckCustGrid" value="Account{!IF(sortExpression=='Account_Services__r.Account__r.Name',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="Account_Services__r.Account__r.Name" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                                    </apex:column>
                       <apex:column value="{!rec.Attachment_File__c}" >
                                        <apex:facet name="header">
                                            <apex:commandLink action="{!fetchInvoiceListCommnadLink}" styleClass="name" immediate="true" reRender="pgblckCustGrid" value="Attachment File Name{!IF(sortExpression=='Attachment_File__c',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="Attachment_File__c" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                                    </apex:column>
                       <apex:column value="{!rec.Comments__c}" >
                                        <apex:facet name="header">
                                            <apex:commandLink action="{!fetchInvoiceListCommnadLink}" styleClass="name" immediate="true" reRender="pgblckCustGrid" value="COMMENTS{!IF(sortExpression=='Comments__c',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="Comments__c" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                                    </apex:column>
                       
                       <apex:column value="{!rec.LastModifiedDate}" >
                                        <apex:facet name="header">
                                            <apex:commandLink action="{!fetchInvoiceListCommnadLink}" styleClass="name" immediate="true" reRender="pgblckCustGrid" value="UPLOADED DATE{!IF(sortExpression=='LastModifiedDate',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="LastModifiedDate" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                                    </apex:column>
                       <apex:column value="{!rec.LastModifiedBy.Name}" >
                                        <apex:facet name="header">
                                            <apex:commandLink action="{!fetchInvoiceListCommnadLink}" styleClass="name" immediate="true" reRender="pgblckCustGrid" value="UPLOADED BY{!IF(sortExpression=='LastModifiedBy.Name',IF(sortDirection='ASC','▼','▲'),'')}">
                                                <apex:param value="LastModifiedBy.Name" name="column" assignTo="{!sortExpression}" ></apex:param>
                                            </apex:commandLink>
                                        </apex:facet>
                                    </apex:column>
                       
                      <!--  <apex:column headerValue="INVOICE DATE" value="{!rec.Month__c},{!rec.Year__c}" style="text-align:left;"  />
                        <apex:column headerValue="Account" value="{!rec.Account_Services__r.Account__r.Name} - {!rec.Account_Services__r.ODS_Service_Name__c}" style="text-align:left;"  />
                        <apex:column headerValue="Attachment File Name" value="{!rec.Attachment_File__c}" style="text-align:left;"/>
                        <apex:column headerValue="COMMENTS" value="{!rec.Comments__c}" style="text-align:left;"/>
                        <apex:column headerValue="UPLOADED DATE" value="{!rec.LastModifiedDate}" style="text-align:left;"/>
                        <apex:column headerValue="UPLOADED BY" value="{!rec.LastModifiedBy.Name}" style="text-align:left;"/> -->
                        <!--<apex:column headerValue="Id" value="{!rec.Id}" style="text-align:left;"/>-->
                        
                       <apex:column style="text-align:left;">
                        <apex:facet name="header">Action</apex:facet> 
                        
                       <apex:commandLink styleClass="time_view lnkInvoiceDownload" title="Download"   html-data-toggle="#" html-data-target="#myModal" onClick="DownloadInvoice('{!rec.Attachment_Id__c}'); return false" >
                        <apex:param name="InvoiceId" value="{!rec.Id}"/>
                        <strong><i class="fa fa-download" aria-hidden="true"></i></strong>
                       </apex:commandLink> 
                       
                       <apex:commandLink styleClass="time_view" title="Edit" html-data-toggle="modal" html-data-target="#myModal" onClick="EditInvoiceUpload('{!rec.Id}'); return false;" rendered="{!IF((isCustomer), false, true)}" >
                        <strong><i class="fa fa-pencil-square-o" aria-hidden="true"></i></strong>
                       </apex:commandLink>    
                                               
                       <apex:commandLink styleClass="time_view lnkInvoiceDelete" title="Delete" html-data-toggle="modal" html-data-target="#"  onClick="DeleteInvoiceUpload('{!rec.Id}'); return false;" rendered="{!IF((isCustomer), false, true)}" status="statusSaveTrip">
                        <strong><i class="fa fa-trash" aria-hidden="true"></i></strong>
                       </apex:commandLink> 
                       
                        </apex:column> 
                 
                
                   </apex:pageBlockTable>
                   
                   <apex:outputPanel styleClass="page-nav-bg" rendered="{!(InvoiceList.size!=0 && InvoiceList !='' && InvoiceList !=null)}" > 
                        <apex:commandButton value="First" action="{!showFirst}" disabled="{!!ShowPrevious}" rerender="searchPanelId" styleClass="save-submit page-nav-btn first-nav-btn" immediate="true"/>
                        <apex:commandButton value="Previous" action="{!showPrevious}" disabled="{!!ShowPrevious}" rerender="searchPanelId" styleClass="save-submit page-nav-btn previous-nav-btn" immediate="true"/>
                        <apex:outputText value="{!CurrentPageInfo}" />
                        <apex:commandButton value="Next" action="{!showNext}" disabled="{!!ShowNext}" rerender="searchPanelId" styleClass="save-submit page-nav-btn next-nav-btn" immediate="true"/>
                        <apex:commandButton value="Last" action="{!showLast}" disabled="{!!ShowNext}" rerender="searchPanelId" styleClass="save-submit page-nav-btn last-nav-btn" immediate="true"/>       
                   </apex:outputPanel> 
               </apex:pageBlock>
           
              </apex:outputPanel>
           </div>
        </div>        
    </div>
</div>      
     
</apex:outputPanel> 
    <apex:outputPanel >
        <div class="time-submit">
        <apex:outputPanel id="UploadInvoicePanel"> 
            <apex:commandbutton styleClass="save-submit" id="btnUpload" value="Upload Invoice" html-data-toggle="modal" html-data-target="#myModal" onClick="UploadInvoice();return false ;" rendered="{!ShowUploadInvoice}"/> 
        </apex:outputPanel>
        </div>
        <apex:outputPanel id="AddInvDisclaimer" styleClass="note-text">
                  <apex:outputLabel rendered="{!ShowDisclaimer}">
                        Note: Please select Customer and Service  to add Invoice.
                  </apex:outputLabel>
                </apex:outputPanel>
    </apex:outputPanel>
<c:ODS_FooterComponent /> 
<!------ Modal Popup for Add/Modify the documents------>
 
  
</apex:form>
</body>
<apex:form id="modalForm" >
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
      <!-- Modal content-->
     <div class="modal-content">
            <h1>Upload Invoice </h1>
           <div style="text-align:center;color:red;" id="divErrorMessageFileType"></div>
           <div style="text-align:center;color:red;" id="divErrorMessageFileName"></div>
          <div class="clr"></div>
          <div class="popup-btn">
           <apex:actionRegion >
        <apex:inputField value="{!Invoice.Invoice_ID__c}" styleClass="hideClass"  id="InvoiceId" />           
        <apex:selectList value="{!Invoice.Month__c}" id="uploadInvoiceMonth" size="1" styleClass="drop-doc Month" onchange="ValidateInvoiceMonthYear();">
        <apex:selectOption itemLabel="Month" itemValue="Month"></apex:selectOption>
        <apex:selectOption itemLabel="January" itemValue="January"></apex:selectOption>
        <apex:selectOption itemLabel="February" itemValue="February"></apex:selectOption>
        <apex:selectOption itemLabel="March" itemValue="March"></apex:selectOption>
        <apex:selectOption itemLabel="April" itemValue="April"></apex:selectOption>
        <apex:selectOption itemLabel="May" itemValue="May"></apex:selectOption>
        <apex:selectOption itemLabel="June" itemValue="June"></apex:selectOption>
        <apex:selectOption itemLabel="July" itemValue="July"></apex:selectOption>
        <apex:selectOption itemLabel="August" itemValue="August"></apex:selectOption>
        <apex:selectOption itemLabel="September" itemValue="September"></apex:selectOption>
        <apex:selectOption itemLabel="October" itemValue="October"></apex:selectOption>
        <apex:selectOption itemLabel="November" itemValue="November"></apex:selectOption>
        <apex:selectOption itemLabel="December" itemValue="December"></apex:selectOption>
    </apex:selectList>
    <apex:selectList styleClass="drop-doc Year"  id="uploadInvoiceYear" value="{!Invoice.Year__c}" html-placeholder="Year" size="1" onchange="ValidateInvoiceMonthYear();ValidateMonthYear();">
    <apex:selectOptions value="{!Years}" />
    </apex:selectList>                        

        
        <apex:inputFile value="{!blobBody}"  id="uploadFile" filename="{!filename}" title="Max file size is 5MB"/>  
        <apex:inputField value="{!Invoice.Comments__c }" id="uploadInvoiceComments" onkeypress="return BlockSpecialCharacter(event)" html-placeholder="Comments" style="disabled:true;margin-bottom:20px;"/>       
        <!--<apex:inputField value="{!Invoice.Attachment_Id__c}" style="disabled:true; " id="editedFileName"/>-->
        

        <div class="clr"></div>

              <apex:commandbutton styleClass="popup-add" Value="ADD" id="uploadInvoice"  onClick="ValidateInvoiceDetails(); return false" rerender="divErrorMessageFileType" status="statusSaveTrip" /> 
              <apex:commandbutton id="uploadDisableButton" styleClass="hideClass" action="{!UploadInvoice}"/> 
              <apex:commandbutton styleClass="popup-cancel" value="RESET" onClick="ResetFields();return false;"/>
              <button type="button" class="btn btn-default" id="btnUploadClose" data-dismiss="modal">CLOSE</button></apex:actionRegion> 
          </div>
      </div>
    </div>
  </div>
</apex:form>
  <apex:includeScript value="{!URLFOR($Resource.ODS_Assets,'js/jquery-1.4.4.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.ODS_Assets,'js/jquery-ui.js')}"/>
    <script type="text/javascript">//<![CDATA[
    $(function() {
        $( "#date_service, #date_service1" ).datepicker({
            dateFormat : 'mm/dd/yy',
            changeMonth : true,
            changeYear : true,
            yearRange: '-100y:c+nn',
            maxDate: '0d'
        });
        $("#date_service, #date_service1").bind('paste',function(e){
            e.preventDefault();  //disable paste in datePicker
        });
    });

    </script> 
</apex:page>