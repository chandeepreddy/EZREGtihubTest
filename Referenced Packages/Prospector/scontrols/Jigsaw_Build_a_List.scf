<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title></title>

	
		
		<script language="javascript" src="jsaw2qa_files/sforceclient.js" type="text/javascript"></script><script type="text/javascript" src="jsaw2qa_files/browsersupport.js"></script><link rel="stylesheet" type="text/css" href="jsaw2qa_files/calendar.css">
		<script id="clientEventHandlersJS" language="javascript">
<!-- 
function initPage() {
	sforceClient.registerInitCallback(setup);
	sforceClient.setLoginUrl("https://www.salesforce.com/services/Soap/u/6.0");
	sforceClient.init("{!API.Session_ID}", "{!API.Partner_Server_URL_60}", true);
}

//Use this function as the entry point for your DHTML and JAVASCRIPT processing
function setup() {
}

//-->
		</script>
<style type="text/css" media="all">
body#splashBody {
  font-family: arial, helvetica, verdana, sans-serif;
  font-size: 80%;
  margin: 0;
  padding: 0;
  width: 97%;
}
img {
  border: 0;
  margin: 0;
  padding: 0;
}
p {
  margin: 0;
  padding: 0;
}
h1.appName {
  font-weight: bold;
  font-size: 100%;
  color: #FFF;
  background-color: #006699;
  padding: 10px 0 10px 8px;
  margin: 0 0 15px 0;
}
h2 {
  color: #FFF;
  padding: 2px 0 2px 8px;
  margin-top: 0;
  background-color: #006699;
  font-size: 90%;
}
h2.exchangeTitle {
  background-color: #006699;
}
#splash {
  margin: 0;
  padding: 0;
  width: 100%;
}
#splash td {
  margin: 0;
  padding: 0;
}
#splash #splashLeft {
  vertical-align: top;
  background-color: #F3F3EC;
  border-bottom: 2px solid #999;
}
#splash #splashCenter {
  display:block;
  width: 15px;
  background-color: #FFF;
}
#splash #splashRight {
  vertical-align: top;
  background-color: #E8E8E8;
  border-bottom: 2px solid #999;
}
#splash #splashLeft .about, #splash #splashLeft .exchange {
  width: 100%;
}
#splash #splashRight .exchange p {
  font-size: 90%;
  color: #333;
  margin: 0 10px 12px 10px;
  line-height: 1.4em;
}
#splash #splashLeft .about p {
  font-size: 90%;
  color: #333;
  margin: 0 10px 12px 15px;
  line-height: 1.4em;
}
#splash #splashLeft .about fieldset {
  color: #333;
  margin: 0 15px 10px 15px;
  padding: 2px;
}
#splash #splashLeft .about fieldset ul {
  padding: 0;
  margin: .3em 0 .3em 2em;
}
#splash #splashLeft .about fieldset li {
  padding: 0;
  margin: 0;
}
#splash #splashLeft .about legend {
  font-size: 90%;
  color: #333;
  font-weight: bold;
}
.imgDiv {
  text-align: center;
  padding: 0 0 10px 0; 
}

span.page-textChar
	{}
</style>	


<style type="text/css">

  /* #DFEAF4;  #e6e6e6; #336699; */

.addCCRightCellActive {
    background-color:#FFFFFF;background-color:#ffffff;padding:8px;vertical-align:top;
}

.addCCLeftCellActive {
    width:250px;text-align:center;background-color:#ffffff;vertical-align:top;
}

.addCCRightCellStatic {
    background-color:#cccccc;padding:8px;vertical-align:top;
}

.addCCLeftCellStatic {
    background-color:#cccccc;width:250px;text-align:center;vertical-align:top;
}

.addCCCenterCell {
    background-color:#FFFFFF;padding:8px;vertical-align:top;border:1px solid #BBBBBB;border-top:0px solid #BBBBBB;
}

.addCCRow { height:26px; }

.addCCHeaderRow {
    height:20px;
}

.addCCTopLeftCellActive {
    font-weight:bold;background-color:#000000;text-align:center; color:#ffffff;
}

.addCCTopRightCellActive {
    font-weight:bold;background-color:#000000;text-align:center; color:#ffffff;
}

.addCCTopRightCellStatic {
    font-weight:bold;background-color:#000000;text-align:center; color:#ffffff;
}

.addCCTopLeftCellStatic {
    font-weight:bold;background-color:#000000;text-align:center; color:#ffffff;
}

.addCCSpacerRow { height:18px; }

.addCCGroupTable {
    border:0px solid gray;padding-right:4px;

}

.addCCFormLabel {
    text-align:right;padding-right:6px;
}

.addCCFormLabelError {
    text-align:right;padding-right:6px;color:#990000;font-weight:bold;
}

.addCCFormLabelWarning {
    text-align:right;padding-right:6px;color:#993300;font-weight:bold;
}

.addCCBodyDiv {
    padding:15px;width:100px;background-color:#FFFFFF;
}

.addCCUpperLeft { border-top:0px solid gray;border-left:0px solid gray;}
.addCCLeft { text-align:center;}
.addCCBottomLeft { border-bottom:0px solid gray;border-left:0px solid gray;}

.addCCUpperRight { border-top:0px solid gray;border-right:0px solid gray;}
.addCCRight { border-right:0px solid gray;}
.addCCBottomRight { border-bottom:0px solid gray;border-right:0px solid gray;}

.addCCTop { border-top:0px solid gray;}
.addCCBottom {  border-bottom:0px solid gray;}

.addCCSingleLeft { border-top:0px solid gray; border-bottom:0px solid gray; border-left:0px solid gray;}
.addCCSingle {  border-top:0px solid gray;  border-bottom:0px solid gray;}
.addCCSingleRight {  border-top:0px solid gray; border-bottom:0px solid gray; border-right:0px solid gray;}

.plaintext {white-space:nowrap;}

.negative { color:#CC0000; }

table.input {
    margin-left:auto;margin-right:auto;
}

.inputCell {
    border:1px solid #cccccc;
    text-align:center;
}

table.error {
    background-color:#FFcccc;
	margin-top:5px;
	margin-bottom:5px;
}

table.errorNoborder {
	background-color:#FFDDDD;
	margin-top:5px;
	margin-bottom:5px;
}

td.error {
	padding:4px;
}
.error {
	font-size:9pt;
	font-weight:bold;
	font-style:normal;
	color:#990000;
}

table.warning {
    background-color:#ffff99;
	margin-top:5px;
	margin-bottom:5px;
}


td.warning {
	padding:4px;
}
.warning {
	font-size:9pt;
	font-weight:bold;
	font-style:normal;
	color:#993300;
}

table.message {
    background-color:#e6e6e6;
	margin-top:5px;
	margin-bottom:5px;
}

table.confirmation {
    background-color:#66cc66;
    color:#003300;
	margin-top:5px;
	margin-bottom:5px;
}

td.confirmation {
    background-color:#66cc66;
    color:#003300;
    font-weight:bold;
}

tr.messageBorder {
    height:1px;
    font-size:1px;
    line-height:1px;
    margin 0px;
    padding 0px;
}

td.messageBorder {
	background-repeat: repeat-x;
	margin 0px;
    padding 0px;
    font-size:1px;
    line-height:1px;
}

td.message {
	padding:1px;
}
.message {
	font-size:12px;
	font-style:normal;
	color:#002d60;
}

tr.searchBorder {
    height:1px;
    font-size:1px;
    line-height:1px;
    margin 0px;
    padding 0px;
}

td.searchBorder {
	background-repeat: repeat-x;
}

div.searchBorder {
    height:1px;
    font-size:1px;
    line-height:1px;
    margin 0px;
    padding 0px;
	background-repeat: repeat-x;
}

.registrationDiv {
    width:100%;
    border-top:1px solid #cccccc;
    margin-top:5px;
    padding-top:5px;
}

.registrationLabel {
    width:190px;
}

.registrationField {
    width:240px;
}

.registrationMessage{
    width:290px;
    font-size:8pt;
}

.listTagTR { margin-top:10px; }

.resultsTable {
	font-size:12px;
}

.resultsTableFixed {
	font-size:12px;
	table-layout:fixed;
}

.underline { text-decoration:underline; }

textarea:readonly {
    font-size:9pt; line-height:16px; font-family:verdana,arial,helvetica,sans-serif; background-color:#ffffff;
}

.required { color:red; }

.instructionsColumn {
    vertical-align:top;
    background-color:#e6e6e6;
    width:200px;
}

button {
	font-size:12px;
	padding:3px;
	background-color: #006699;
	border-top:solid 1px #cfcfcf;
	border-left:solid 1px #cfcfcf;
	border-right:solid 1px #777799;
	border-bottom:solid 1px #000000;
	color:#ffffff;
	cursor:hand;cursor:pointer;
}

.instructionsColumnNoScorecard {
    width:150px;padding-top:14px;background-color:#cccccc;color:#ffffff;
}


.mainDisplayColumn {
    vertical-align:top;
    padding:8px;
    height:400px;
}

.referTextBox {
    margin:4px;border:1px solid #cccccc;padding:4px;
}


.scorecardLabel {
    text-align:left;
    font-size:13px;
}

.scorecardValue {
    text-align:right;
    font-size:13px;
    white-space:nowrap;
}

.scorecardLabelNoPts {
    text-align:left;
    font-size:13px;
    background-color:#cc0000;
}

.scorecardValueNoPts {
    text-align:right;
    font-size:13px;
    white-space:nowrap;
    background-color:#cc0000;
}

/*------------------------tab styles for leaderboard------------------*/

.tabSelected { 
    cursor:normal;
}

.tabUnselected { 
    cursor:hand;cursor:pointer;
}

.tabSelected a { 
    color:#ffffff;
}

.tabSelected a:visited {color: #f3f3f3;text-decoration: none;}
.tabSelected a:hover {color: ffffff;text-decoration: none;}

.tabUnselected a:visited {color: #f3f3f3;text-decoration: underline;}
.tabUnselected a:hover {color: ffffff;text-decoration: underline;}

.tabUnselected a { 
    color:#003366;
}

.leaderSeparator {
    height:1px;line-height:1px;font-size:1px;
}

.leaderLabel {
    text-align:left;
}

.leaderValue {
    text-align:right;
    font-size:9pt;
    white-space:nowrap;
}

.firstPlaceLabel {
    text-align:left;
    border-bottom:1px solid #e6e6e6;
    background-color:#ffffcc;
    font-weight:bold;
}

.firstPlaceValue {
    text-align:right;
    border-bottom:1px solid #e6e6e6;
    font-size:9pt;
    white-space:nowrap;
    background-color:#ffffcc;
    font-weight:bold;
}

.prizeValue {
    font-size:15px;
    color:#cc0000;
    font-weight:bold;
}

.contestLabel {
    font-weight:bold;color:#003366;padding-top:4px;padding-bottom:4px;
}

.leaderTable {
    background-color:#e6e6e6;
    border:0px solid #336699;
    width:175px;
    margin-left:auto;
    margin-right:auto;
}

.contestWinner {
    color:003366;
    font-weight:bold;
}

.legendRow {
    height:100%;
    vertical-align:bottom;
}

.searchTable {
    font-family:verdana;arial;sans-serif;
    font-size:10px;
    background-color:#e6e6e6;
    vertical-align:middle;
}

.searchFieldWide { width:205px; }
.searchFieldWideWarning { width:205px;background-color:#ffff99 !important; }
.searchFieldWideError { width:205px;background-color:#FFcccc !important; }
.searchFieldNarrow { width:100px; }
.searchFieldVeryNarrow { width:85px; }
.searchFieldMedium { width:160px; }
.searchFieldMedWide { width:180px; }
.searchFieldMedWide2 { width:200px; }
input.warning { background-color:#ffff99 !important; }

/*-----------header styles--------------*/

.headerInfoCell {
    color:#CBDCED;text-align:left;width:500px;
}

.headerWelcomeCell {  
    text-align:right;
}

.titleText {
    font-weight:bold;font-size:15px;color:#336699;font-family:arial;
}

.searchTotal {
    font-family:verdana,arial,sans-serif;
    font-size:11px;
    padding-top:4px;padding-bottom:4px;
}

.findContactsTopRow {
    vertical-align: top
}

.findContactsBottomRow {

}

.findContactsSearchTips {
    width:560px;
    border: 0px solid gray;
    background-color:white;
    color:#333333;
    border-top:1px solid #CCCCCC;
}

.companyResultsTD {
    width:560px;vertical-align:top;
}

.companySearchTD {
    vertical-align:top;
}

.tblheader { 
	background-color: #006699; 
	font-size:12px;
	padding:2px; 
	padding-left:4px; 
	color: #F3f3f3; 
	text-decoration: none; 
	border-bottom: 1px solid lightgrey; 
	border-top: 1px solid lightgrey;
	overflow:hidden !important;
}

.tblheaderCentered { 
    font-size:12px;
	background-color: #006699; 
	text-align:center;
	padding:2px; 
	padding-left:7px; 
	color: #F3f3f3; 
	text-decoration: none; 
	border-bottom: 1px solid lightgrey; 
	border-top: 1px solid lightgrey;
	overflow:hidden !important;
}

.tblheaderNarrow {
    font-size:12px;
	background-color: #006699; 
	text-align:center;
	padding:2px; 
	padding-left:1px;
	padding-right:1px;
	color: #F3f3f3;
	text-decoration: none; 
	border-bottom: 1px solid lightgrey; 
	border-top: 1px solid lightgrey;
	overflow:hidden !important;
}


.tblheaderWide { 
    font-size:12px;
	background-color: #006699; 
	width:90%;
	padding:2px; 
	padding-left:7px; 
	color: #F3f3f3; 
	text-decoration: none; 
	border-bottom: 1px solid lightgrey; 
	border-top: 1px solid lightgrey;
	overflow:hidden !important;
}

.tblheaderLeft { 
    font-size:12px;
	background-color: #006699;
	padding:2px;
	color: #f3f3f3; 
	text-decoration: none; 
	border-bottom: 1px solid lightgrey; 
	border-top: 1px solid lightgrey; 
	border-left: 0px solid lightgrey;
	white-space:nowrap !important;
	overflow:hidden !important;
}
.tblrowLeft {
    
	line-height:18px;
	padding-right:2px; 
	padding-left:4px;
	overflow:hidden !important;
	white-space:nowrap !important;
	
}

.tblrow {
	line-height:18px;
	padding-right:2px; 
	padding-left:4px; 
	border-left:1px solid lightgrey;
	overflow:hidden !important;
	white-space:nowrap !important;
}

.tblrowBold {
	line-height:18px;
	padding-right:2px; 
	padding-left:6px;
	font-weight:bold;
	border-left:1px solid lightgrey;
	overflow:hidden !important;
	white-space:nowrap !important;
}

.tblrowgrey {
	line-height:18px;
	color:lightgrey;
	padding-right:2px; 
	padding-left:6px; 
	border-left:1px solid lightgrey;
	overflow:hidden !important;
	white-space:nowrap !important;
}

.nowrap {
    white-space:nowrap;
}

.list { background-color: #FFFFFF; color: #333333;}

a:link {color: #002D60;}
a:visited {color: #002D60}
a:hover {color: purple;}

.navbarLink a:hover {color: FF0000;text-decoration: underline; font-weight:bold;}

.tblheader a {color: #F3f3f3; text-decoration: underline;}
.tblheader a:visited {color: #f3f3f3;text-decoration: underline;}
.tblheader a:hover {color: FF9900;text-decoration: underline;}

.tblheaderNarrow a {color: #F3f3f3; text-decoration: underline;}
.tblheaderNarrow a:visited {color: #f3f3f3;text-decoration: underline;}
.tblheaderNarrow a:hover {color: FF9900;text-decoration: underline;}

.tblheaderWide a {color: #F3f3f3; text-decoration: underline;}
.tblheaderWide a:visited {color: #f3f3f3;text-decoration: underline;}
.tblheaderWide a:hover {color: FF9900;text-decoration: underline;}

.tblheaderCentered a {color: #F3f3f3; text-decoration: underline;}
.tblheaderCentered a:visited {color: #f3f3f3;text-decoration: underline;}
.tblheaderCentered a:hover {color: FF9900;text-decoration: underline;}


.tblrow a:visited {color:#663366;}
.tblrowLeft a:visited {color: #663366;}



.lastRow { font-size:2px;  border-bottom: 1px solid lightgrey; }
.firstRow { font-size:2px; }

body {
	font-family: arial, verdana, arial, helvetica, sans-serif; background-color:#FFFFFF; margin:0px;padding:0px;
}

table {
    font-size:12px;
    color:#333333;
}

input {
    font-size:9pt;background-color:#ffffff !important;
}

input.checkbox {
    font-size:9pt; background-color:transparent !important;
}

input.radio {
    font-size:9pt; background-color:inherit !important;
}

select {
    font-size:9pt;background-color:#ffffff !important;
}

form {
	margin:0px;
}

button {
    font-size:12px;
}

div.tblheader { 
    color:#ffffff;
}

div.tblheaderNarrow { 
    color:#ffffff;
}

div.tblheaderWide { 
    color:#ffffff;
}

div.tblheaderCentered { 
    color:#ffffff;
}

.bcdiv{ width:360px;overflow:hidden; 
}

.bcField {	
	overflow:hidden;
}

.bcField2 {	
	font-family:arial;
	font-size:13px;
	font-weight:bold;
	padding:0px;
	overflow:hidden;
	color:#11578a;
}

.bcTitle {	
	font-family:arial;
	font-size:14px;
	font-weight:bold;
	padding:0px;
	color:#11578a;
	overflow:hidden;
}

.bcMainCell {
    border:1px solid #cccccc;padding:8px;background-color:#FBFBF2;
}

.nowrap {
	text-overflow:ellipsis;overflow:hidden;white-space:nowrap;
}

/*-----------help styles--------------*/

.help {font-color:#333333; font-size:12px; font-family:arial,verdana, helvetica;}
.help h1 { font-size:16pt; font-family:arial; font-weight:bold; color:#002d60;}
.help h2 { font-size:12pt; font-family:arial; text-decoration:underline;color:#002d60;}
.help h3 { font-size:9pt; font-family:arial; text-decoration:underline; color:#333333;}
.bu { font-weight:bold; text-decoration:underline; }
.menuHeaderRow { background-color:#DDDDDD; font-weight:bold; }

.about {font-family: trechubet,verdana,arial,helvetica,sans-serif; color:#002D60;}
.about h1 { font-size:16pt; font-family:arial; font-weight:bold; color:#002D60;}
.about h2 { font-size:12pt; font-family:arial; text-decoration:none;color:#002D60}
.about h3 { font-size:9pt; font-family:arial; text-decoration:underline; color:#002D60}

.row1 { background-color: #e6e6e6;font-size:12pt}
.row0 { background-color: #ffffff;font-size:12pt}

.homepage {background-color:#e6e6e6;font-color:#333333; font-size:9pt; font-family:verdana,arial, helvetica; }

h1 { font-size:12pt; font-family:arial,sans-serif; font-weight:bold; color:#333333;}
h2 { font-size:11pt; font-family:arial,sans-serif; color:#333333;}
h3 { font-size:9pt; font-family:arial,sans-serif;  color:#333333;}

.helpList li{}
.helpList {}

.navbar a { font-weight:bold; text-decoration: underline;}
.navbar a:visited {font-weight:bold; text-decoration: underline;}
.navbar a:hover {color: FF9900; font-weight:bold; text-decoration: underline;}

.alt1 { background-color: #e6e6e6; }
.alt0 { background-color: #ffffff; }

.listPagingTop { padding-top:2px; padding-bottom:2px; font-size:8pt;}
.listPagingBottom { padding-top:2px; padding-bottom:2px; font-size:8pt;}
.currentpage { font-weight:bold; }

.sidebox {
	width: 100px; 
	font-size: 9pt;
	border:1px solid #003366;
}

.helpbox {
	background-color: #e6e6e6;
	margin: 0;
	padding: 10px 10px 10px 10px;
	border:1px solid #AAAAAA;
}

.csvPreviewCell { height:24px;white-space:nowrap; }
.csvTextareaCell { height:306px;}
.csvPreviewRow { }

img { border:0px; }

img.button { cursor:hand;cursor:pointer;border:0px; }
.radio { position:relative; top:-2px; }

table.tipbox { margin-left:auto;margin-right:auto;color:#002d60;width:135px; }
.tipLabel { font-weight:bold;color:#003366; }

.subHead { font-size:11pt; font-weight:bold; color:#002d60; }
.lead { font-family: "helvetica"; "sans-serif"; color:#995133; font-size:16px; line-height:18px; font-weight:bold }
.quote { font-size:12px; font-style:italic; color:#002d60; }

.leftbar { color:#ffffff;background-color:#002d60;padding-left:8px;padding-top:8px;width:1%; }

.leftbar a {color: #F3f3f3; line-height:16px; text-decoration: underline;}
.leftbar a:visited {color: #f3f3f3; line-height:16px; text-decoration: underline;}
.leftbar a:hover {color: FF9900; line-height:16px; text-decoration: underline;}

.popuplink { font-size:8pt; }

.spacerDiv { font-size:1px; }

.textSearchTable { font-weight:bold; }



.companyInfoCell {
    font-family:arial,verdana,sans-serif;
    font-size:12px;
    padding-bottom:4px;
    background-color:#ffffff;border:1px solid #dddddd;
}

.navbarTable {
    font-family:verdana;font-size:11px;background-color:#f1f1f1;
}

.navbarStats {
    color:#666666;font-family:verdana;font-size:11px;font-weight:bold;
}

.new_homepage {
    background-color:#ffffff;font-color:#333333; 
    font-size:11px; font-family:arial,verdana,arial, helvetica;
    margin:0px;

}


.homepageHeaderItem {
    cursor:hand;cursor:pointer;
}

.homepageLeftSel {
    background-color:c3cfdb;font-size:11px;font-weight:bold;color:003366;
}

.homepageLeftUnsel {
    background-color:a8bacc;font-size:11px;font-weight:bold;color:003366;
}

.pageTitle {
    display:block;
    font-size:12pt; font-family:arial,sans-serif; font-weight:bold; color:#333333;
}

.sectionTitle {
    display:block;
    font-size:11pt; font-family:arial,sans-serif; font-weight:bold; color:#333333;
    line-height:22px;
    margin-top:12px;
}

div.mainContent {
    margin:12px;
}

div.sidebox {
    padding:8px; text-align:center; background-color:#ffffff;
}

tr.vertSpace { line-height:25px; }
tr.vertSpaceNarrow { line-height:19px; }

td.fieldLabel { text-align:right; font-family:verdana; font-size:10px; white-space:nowrap;}

img.separator { margin-top:12px;margin-bottom:12px; }

.newLabel { font-size:11px;font-weight:normal;color:#ff0000;position:relative;top:-4px;left:2px; }

img.expander {
    cursor:hand;cursor:pointer;
}
div {
    text-align:left;
    font-size:12px;
}

div.pageTitle {
    font-size:14px;
    color:#333333;
    font-weight:bold;
    padding:6px;
}

table {
    font-size:12px;
}

.facetDiv {
    margin-left:auto;margin-right:auto;
    text-align:left;
    
    font-size:12px;
    margin-left:16px;
    overflow:hidden;
}

.innerFacetDiv {
    margin-right:auto;
    text-align:left;
    font-size:12px;
    margin-left:18px;
    overflow:hidden;
}

.topLevelFacetDiv {
    margin-left:12px;
    text-align:left;
    font-size:12px;
}

.containerDiv {
    margin-left:0px;
    text-align:left;
    font-size:12px;
    overflow:hidden;
}

.suggestionHeader1 {
    margin-left:auto;margin-right:auto;
    text-align:left;
    font-size:14px;
    font-weight:bold;
    margin-left:0px;
    margin-bottom:4px;
}

.pageHeader {
    margin-left:auto;margin-right:auto;
    text-align:left;
    font-size:14px;
    font-weight:bold;
    margin-bottom:4px;
}

.searchLabel {
    font-weight:bold;
}

.updateResultsBtn {
    margin-bottom:12px;
    text-align:center;
}

.moreLink {
    color:#000000 !important;
    font-weight:bold;
    text-decoration:none;
}

.moreLink {
    color:#000000 !important;
    font-weight:bold;
    text-decoration:none;
}

.moreLink:hover {
    color:purple !important;
    font-weight:bold;
    text-decoration:none;
}

.cancelLink {
    font-size:11px;
}

body {
    font-family:arial;
}

.listlink {
	COLOR: #333; TEXT-DECORATION: none
}
A.listlink:link {
	COLOR: #333; TEXT-DECORATION: none
}
A.listlink:visited {
	COLOR: #666; TEXT-DECORATION: none
}
A.listlink:hover {
	COLOR: #000; TEXT-DECORATION: underline
}

.rightPanelBanner {
    margin-top:38px;margin-left:12px;
}

.mainBodyTable {

}

/*reg process styles*/
/*global*/
.clear { 
clear: both;
height: 0px;
line-height: 0px;
font-size: 0px;
padding: 0px;
margin: 0px;
border: 0px;
}
#reg {
background-repeat: repeat-y;
margin:0;
padding:0;
border:0;
position:relative;
display:block;
width:1000px;
font-size:11px;
}
#reg input {
font-size:11px;
}
#main {
float:left;
width:800px;
margin:0;
padding:0;
border:0;
position:relative;
display:inline;
text-align:center;
}
#rightCol {
float:left;
width:200px;
margin:0;
padding:100px 0 0 0;
border:0;
position:relative;
display:inline;
text-align:center;
}
#regBanner {
width:800px;
margin:0;
padding:0 0 5px 0;
}
#leftCol {
float:left;
width:125px;
margin:0;
padding:25px 0 0 0;
border:0;
position:relative;
display:inline;
text-align:center;
}
#footer {
border-top:1px dotted #CCCCCC;
width:660px;
margin:120px 70px 0 70px;
padding:0 0 10px 0;
}
#footer .txt {
float:left;
position:relative;
display:inline;
width:555px;
text-align:center;
font-size:11px;
margin:0;
padding:5px 0 0 0;
}
#footer .verisign {
float:left;
position:relative;
display:inline;
width:105px;
text-align:right;
margin:0;
padding:5px 0 0 0;
}
#footer a {
color:#333333;
}
#regErrorTop {
margin: 0;
padding:0;
height:25px;
line-height:25px;
width: 100%;
position:relative;
display:inline;
}
#regError {
background-color:#ffcccc;
margin: 0;
padding:0;
width: 100%;
position:relative;
display:block;
}
#regError p {
background-color:#ffcccc;
margin:0;
padding:5px 5px 5px 5px;
font-size:11px;
font-weight:bold;
font-style:normal;
color:#ff0000;
}
h1.regHead {
font-family: arial;
font-size:18px;
color: #006699;
margin:0;
padding: 25px 0 15px 0;
}
h2.regSubHead {
font-family: arial;
font-size:14px;
color: #000000;
margin:0;
padding: 20px 0 20px 0;
text-align:center;
}

/*regPersonal*/

#conPersonal {
float:left;
width:550px;
margin:0 125px 0 0;
padding:0;
border:0;
position:relative;
display:inline;
}

#contactInfo {
float:left;
width:200px;
padding:0;
margin: 0 50px 0 0;
display:inline;
position:relative;
}
#contactInfo p {
font-size:11px;
margin:0;
padding:0 0 10px 0;
}
#contactInfo input {
width:200px;
margin: 0;
padding:0;
font-size:11px;
}
#security {
float:left;
width:300px;
display:inline;
position:relative;
margin:0;
padding:0;
}
#security p {
font-size:11px;
margin:0;
padding:0 0 10px 0;
}
#security select {
width:300px;
margin: 0;
padding:0;
font-size:11px;
}

#security .box {
width:300px;
display:block;
position:relative;
margin:0;
padding:15px 0 0 0;
}
#security .box .brdr {
border: 1px solid #AAAAAA;
margin:0;
padding:0;
}
#security .box .con {
width:278px;
display:block;
position:relative;
margin: 0 10px 0 10px;
padding:5px 0 0 0;
text-align:center;
}
#security .box h2 {
display:inline;
font-size:14px;
color: #006699;
margin:0 120px 0 0;
padding: 0;
}
#security .box a {
font-size:10px;
}

#security .box p {
font-size:11px;
margin:0;
padding: 10px 0 0 0;
}

#security .box .con .encryp {
width:278px;
margin: 10px 0 0 0;
padding:0;
border:0;
text-align:center;
}
#security .box .con input {
margin: 3px 0 9px 0;
padding:0;
width:161px;
}
#security p.terms {
font-size:9px;
margin:0;
padding: 15px 0 30px 0;
}

#security .btn {
width:300px;
margin: 0;
padding:0;
text-align:center;
}

/*showPlan*/

#conPlan {
float:left;
width:625px;
margin:0 50px 0 0;
padding:0;
border:0;
position:relative;
display:inline;
}

#planInfo {
float:left;
width:350px;
display:inline;
position:relative;
margin:0 50px 0 0;
padding:0;
}
#planInfo .boxTop {
width:350px;
padding: 0;
margin:0;
border:0;
}
#planInfo .boxMid {
background-color:#99ccff;
width:350px;
padding: 0;
margin:0;
}
#planInfo .boxBot {
width:350px;
padding: 0;
margin:0;
border:0;
}
.boxTop img, .boxBot img {
border:0;
padding:0;
margin:0;
}
#planInfo .boxMid .acctRadio {
float: left;
display:inline;
padding: 0;
margin: 0;
line-height: 25px;
width: 15px;
margin-right: 4px; margin-right:expression(2);
margin-top:2px; margin-top:expression(-3);
margin-left:3px; margin-left:expression(0);
}
#planInfo .boxMid .acctType {
float:left;
position:relative;
display:block;
width:40px;
margin: 0;
padding:0; 
}
#planInfo .boxMid .acctDesc {
float:left;
position:relative;
display:inline;
width:275px;
margin: 0;
padding:2px 0 0 0; 
}
input.blue {
background-color:#99ccff !important;
padding:0 !important;
margin:0 !important;
border:0 !important;
line-height:35px !important;
}
#planInfo label {
color:#000000;
font-size: 14px;
line-height:15px;
padding:0;
margin:0;
}

#accntInfo {
float:left;
width:225px;
display:inline;
position:relative;
margin:0;
padding:23px 0 0 0;
}
#accntInfo .fields {
width:225px;
margin:0;
padding:0;
}
#accntInfo p {
margin:0;
padding:10px 0 0 0;
font-size:11px;
}
#accntInfo p.smallBlueText {
margin:0;
padding:0 25px 0 0;
font-size:9px;
text-align:right;
color: #006699;
}
#accntInfo .blueText {
color: #006699;
}
#accntInfo .fields input, #accntInfo .fields select {
width:200px;
margin: 2px 0 0 0;
padding:0;
}
#accntInfo .button {
width:200px;
margin:0;
padding:15px 0 0 0;
text-align:center;
}

/*Billing*/

#conBilling {
float:left;
width:450px;
margin:0 225px 0 0;
padding:0;
border:0;
position:relative;
display:inline;
}

#conBilling .boxMid {
background-color:#99ccff;
position:relative;
display:block;
width:450px;
padding: 0;
margin:0;
border:0;
height:25px;
}
#conBilling .boxMid .billingRadio {
float: left;
display:inline;
padding: 0;
margin: 0;
line-height: 25px;
width: 15px;
margin-right: 4px; margin-right:expression(2);
margin-top:4px; margin-top:expression(0);
margin-left:6px; margin-left:expression(3);
}
#conBilling .boxMid .billingDesc {
float:left;
position:relative;
display:block;
width:410px;
margin: 0;
padding:0; 
}

#trialNow {
float:left;
width:227px;
display:block;
position:relative;
margin:0 21px 0 0;
padding:0;
}
#trialLater {
float:left;
width:227px;
display:block;
position:relative;
margin:0;
padding:0;
}
#trialNow p {
font-size:10px;
margin:0;
padding:0 0 0 20px;
}
#trialNow .boxMid input {
width:175px;
margin:0;
padding:0;
}
#conBilling .boxTop {
width:370px;
padding: 0;
margin:0;
border:0;
}
#conBilling .boxBot {
width:370px;
padding: 0;
margin:0;
border:0;
}
#conBilling .boxMidDesc {
background-color:#99ccff;
position:relative;
display:block;
width:370px;
padding: 0;
margin:0;
}
#conBilling .col {
float:left;
width:200px;
display:inline;
position:relative;
margin:0;
padding:0;
border:0;
}
#conBilling .col p {
font-size:11px;
margin:0;
padding:10px 0 0 0;
}
#conBilling p.smallBlueText {
margin:0;
padding:0;
font-size:9px;
text-align:right;
color: #006699;
}
#conBilling .blueText {
color: #006699;
}
#conBilling .col input, #conBilling .col select, #conBilling .col textarea {
width:200px;
margin:0;
padding:0;
}
#conBilling .col .state {
float:left;
width:70px;
display:block;
position:relative;
margin:0;
padding:0;
border:0;
}
#conBilling .col .state input {
width:60px;
margin:0;
padding:0;
}
#conBilling .col .zip {
float:left;
width:130px;
display:block;
position:relative;
margin:0;
padding:0;
border:0;
}
#conBilling .col .zip input {
width:130px;
margin:0;
padding:0;
}
#conBilling .col .txt {
float:left;
width:135px;
display:block;
position:relative;
margin:0;
padding:12px 0 0 0;
}
#conBilling .col .code {
float:left;
width:65px;
display:block;
position:relative;
margin:0;
padding: 15px 0 0 0;
text-align:right;
}
#conBilling .col .code input {
width:57px;
margin:0;
padding:0;
}

#conBilling .col .txt p {
font-size:10px;
margin:0;
padding:0;
}
#conBilling .col p.popLink {
font-size:9px;
margin:0;
padding:0;
text-align:right;
}
#conBilling .submit {
padding: 30px 0 0 0;
margin:0;
border:0;
width:200px;
text-align:center;
}
#conBilling .submit input{
width:120px;
margin:0;
border:0;
}
#conBilling a {
font-size:9px;
margin:0;
padding:0;
}
/*confirmations*/

#conComplete {
float:left;
width:550px;
margin:0 125px 0 0;
padding:0;
border:0;
position:relative;
display:inline;
}

#conComplete p {
margin:0;
padding:0 0 10px 0;
border:0;
font-size:11px;;
}
#conConfirm {
float:left;
width:625px;
margin:0 50px 0 0;
padding:0;
border:0;
position:relative;
display:inline;
}

#conConfirm .boxTop {
width:300px;
padding: 0;
margin:0;
border:0;
}
#conConfirm .boxMid {
background-color:#99ccff;
width:300px;
padding: 0;
margin:0;
border:0;
height:135px;
}
#conConfirm .boxMid p {
padding: 0 0 0 25px;
margin:0;
border:0;
font-size:11px;
}
#conConfirm .boxMid input {
padding: 0;
margin:0;
width: 165px;
}
#conConfirm .submit {
background-color:#99ccff;
width:300px;
padding: 0 0 15px 0;
margin:0;
border:0;
height:30px;
text-align:center;
}
#conConfirm .boxBot {
width:300px;
padding: 0;
margin:0;
border:0;
}

#conConfirm #trialNow {
float:left;
width:300px;
margin:0 25px 0 0;
padding:0;
border:0;
position:relative;
display:inline;
}

#conConfirm #trialLater {
float:left;
width:300px;
margin:0;
padding:0;
border:0;
position:relative;
display:inline;
}

.nameRadio {
float:left;
display:inline;
position:relative;
width:20px;
margin:0;
padding:0;
}
.nameTxt {
float:left;
display:inline;
position:relative;
width:135px;
margin:0;
padding:2px 0 0 0;
}
/***global button styles**/


#btn175x25{
	color:#FFFFFF !important;
	width:175px;
	height:25px;
	line-height:23px;
	background-repeat: no-repeat;
	margin: 7 0 0 20px;
	text-align:center;
	text-decoration:none;
	cursor:pointer;
	font-weight:bold;
}





</style>




<style type="text/css" media="screen, print, projection">

  *{
z-index:auto;
}



body, div,  h1, h2, h3, h4, h5, h6, ol, ul, li, dl, dt, dd, blockquote, td, p, div, input, table, tr, td, select { 
	color: #000000; 
	font-family: arial, helvetica, sans serif; 
	font-size: 11px;
	
}



form {
margin:0px; padding:0px; border:0px;
}


h1 {

	font-size: 18px;
	color: #006699;
	font-weight: bold;
}
h2 {
	position:relative;
	font-size: 14px;
	color: #ffffff;
	font-weight: bold;
	background-repeat: no-repeat;
	background-position:center left;
	padding: 0 20px 0 20px;
	margin: 0 0 0 10px;
	line-height:25px;
	heightL:25px;
}
h3 {
	position:relative;
	font-size: 14px;
	color: #006699;
	font-weight: bold;
	background-repeat: no-repeat;
	padding: 0 20px 0 20px;
	margin:0;
	line-height:10px;
	height:15px;
}









/*****************************************/
#rsltSum {
margin: 0 0 15px 0;
}

#rsltSum h3 {
	position:relative;
	font-size: 11px;
	color: #006699;
	font-weight: bold;
	background-image:none;
	margin:0;
	padding:0;
}
h4 {
	padding:0;
	margin:0;
	font-size: 11px;
}
form {
	margin:0;
	padding:0;
	border:0;
}
input, select {
	font-family: arial, helvetica, sans serif; 
	font-size: 11px; 
	
}
select {
	height:140px expression('');
	size:8;
	width:170px;
	margin:0;
	//background-color:inherit !important;
	margin-bottom:0px;}
	
	
select.smSelect{

	height:90px;
}

	
a {
	color: #006699;
}

/*common classes*/
.clr { 
 	clear: both;
   	height: 0px;
   	line-height: 0px;
   	font-size: 0px;
	padding: 0px;
	margin: 0px;
	border: 0px;
}

.flt {
	float:left;
	display:inline;
}
input.txt {
	width:170px;
}
input.txtNam {
	width:260px;
}
.frmBox {
	width:770px;
	position:relative;
	background-color:#999999;
	padding: 1px 0 1px 0;
	margin: 15px 0 0 0;
}
.frmCon {
	width: 768px;
	position: relative;
	margin:0 1px 0 1px;
	background-color: #E6E6E6;
}
.frmPad {
	width: 753px;
	position: relative;
	margin:0 0 0 15px;
	padding: 10px 0 5px 0;
	background-color: #E6E6E6;
}
.sumBox {
	width:770px;
	position:relative;
	background-color:#999999;
	padding: 0 0 1px 0;
	margin: 0;
}

.sumCon {
	width: 768px;
	position: relative;
	display:block;
	margin:0 1px 0 1px;
	background-color: #CECDCD;
}
.sumPad {
	width: 753px;
	position: relative;
	margin:0 0 0 15px;
	padding: 15px 0 15px 0;
	background-color: #CECDCD;
}
.rsltSumHdr {
	width:770px;
	position:relative;
	background-color:#006699;
	padding: 0;
	margin: 0;
	height:25px;
}
.rsltSumBox {
	width:770px;
	position:relative;
	background-color:#999999;
	padding: 1px 0 1px 0;
	margin: 0;
}
.rsltSumCon {
	width: 768px;
	position: relative;
	display:block;
	margin:0 1px 0 1px;
	background-color: #C2DEF2;
}
.rsltSumPad {
	width: 748px;
	position: relative;
	margin:0 10px 0 10px;
	padding: 0 0 5px 0;
	background-color: #C2DEF2;
}
.srchHd {
	float:left;
	position:relative;
	display:inline;
	width:200px;
	height: 15px;

}
.srchRsltHd {
	float:left;
	position:relative;
	display:inline;
	width:620px;
	height: 15px;

}
.cmpyHdrHd {
	float:left;
	display:inline;
	position:relative;
	width:95px;
	height:15px;
}
.cntctHdrHd {
	float:left;
	display:inline;
	position:relative;
	width:160px;
	height:15px;
}


#cnTitle, #cnName, #cmName {
width:170px;
}





.hdrMsg {
	float:left;
	display:inline;
	position:relative;
	font-weight:bold;
	color: #FF6600;
	width:300px;
	height:15px;
}
.inptGrp {
	float:left;
	display:block;
	position:relative;
	width: 190px;
	padding: 10px 0 0 0;
}
.inptGrpRt {
	float:left;
	display:block;
	position:relative;
	width: 170px;
	padding: 10px 0 0 0;
}
.rsltGrp {
	float:left;
	display:block;
	width: 180px;
	margin: 0 5px 0 0;
	padding: 10px 0 10px 0;
	z-index:400;
}
.rsltGrpRt {
	float:left;
	display:block;
	position:relative;
	width: 180px;
	padding: 10px 0 10px 0;
}
.hr {
	width: 748px;
	position: relative;
	height:1px;
	line-height:1px;
	font-size:1px;
	background-color: #006699;
}
.rdoLbl {
	line-height:18px;
}
.chckLbl {
	line-height:22px;
	margin-left:5px;
}

/**page layout styles**/

#lCol{float:left;
	margin-left:15px;
	width:770px;
	margin-right:15px;

}

#rCol{
	float:left;
	width:200px;
	margin-top:40px;
	margin-left:0px;
}



#rsltSum p {
	margin:0 ;
	padding:0;
}
#rsltSum p.rsltActn {
	margin:0;
	padding:5px 0 0 0;
	text-align:right;
}
/*specific classes and IDs*/
#cmpyFrm {
	width:770px;
	position:relative;
}
#pgHd {
	width: 770px;
	position: relative;
	padding: 0;
	margin: 15px 0 0px 0px;

}
#sbmt {
	width: 770px;
	position: relative;
	padding: 0;
}
#srchBsc {
	float:left;
	position:relative;
	display:inline;
	width: 380px;
	line-height: 22px;
	padding-top:6px;

}

#srchSvd {
	float:left;
	position:relative;
	display:inline;
	width:140px;
}
#srchSvdHdr {
	position:relative;
	width:140px;
	background-color:#C2DEF2;
	height: 20px;
	line-height: 20px;
	text-align:center;
}
#srchSvdLnks {
	position:relative;
	width:140px;
	background-color:#999999;
	padding: 1px 0 1px 0;
}
#srchSvdLnksPad {
	position:relative;
	width:138px;
	background-color:#FFFFFF;
	margin: 0 1px 0 1px;
}
#srchSvdLnksPad ul {
	padding:5px 0 2px 0;
	margin:0;
}
#srchSvdLnksPad ul li {
	padding:0 0 2px 0;
	margin:0 5px 0 5px;
}
.cmpyHdnFlds { 
	width:768px;
	position:relative;
	display:block;
    	height: 15px;
    	line-height: 1px;
    	font-size: 1px;
	padding: 0px;
	margin: 0px;
	border: 0px;
	background-color: #C2DEF2;
	background-repeat: no-repeat;
}
.cntctHdnFlds { 
	width:768px;
	position:relative;
	display:block;
    	height: 15px;
    	line-height: 1px;
    	font-size: 1px;
	padding: 0px;
	margin: 0px;
	border: 0px;
	background-color: #C2DEF2;
	background-repeat: no-repeat;
}
.frmHd {
	width: 770px;
	height:30px;
	margin:0;
	padding:0;
	border:0; 
}
.frmHd .tabWhite {
	float:left;
	display:inline;
	width: 125px;
	height:25px;
	line-height:25px;
	margin-top:5px;
	background-repeat: no-repeat;
	text-align:center;
	font-size:14px;
	font-weight:bold;
}
 .tabWhite a, .tabBlue a {
	 color:#000000;
	 text-decoration:none;
 }
.frmHd .tabBlue {
	float:left;
	display:inline;
	width: 125px;
	height:25px;
	line-height:25px;
	margin-top:5px;
	background-repeat: no-repeat;
	text-align:center;
	font-size:14px;
	font-weight:bold;
	color:#006699;

}
.frmHd .btn {
	float:left;
	display:inline;
	width: 60px;
	height:25px;
	margin:0 0 5px 415px;
	padding:0;
}
.frmHd .txtLnk {
	float:left;
	display:inline;
	text-align:right;
	width: 5px;
	height:15px;
	margin:0 0 0px 0;
	padding:0;
	line-height:25px;
}
.frmHd .txtLnk a {
	text-decoration:underline;
}
#cmpyNameLbl {
	position:relative;
	line-height:20px;
	height:25px;
	width:100px;
	
}

#sbmt .btn {
	float:left;
	display:inline;
	position:relative;
	width: 60px;
	margin:0 0 0 665px;
	padding:0 0 5px 0;
}
#sbmt .txtLnk {
	float:left;
	display:inline;
	text-align:right;
	width: 3px;
	margin:0;
	padding:0 0 0px 0;
	line-height:25px;
}
#sbmt .txtLnk a {
	text-decoration:underline;
}

#cmpyNameLbl {
	position:relative;
	line-height:20px;
	height:25px;
	width:100px;
	
}
#cmpyXclud	{
	position:relative;
	line-height:20px;
	height:25px;
	width:300px;
	margin: 0 0 0 20px;
}
#cmpyTxt {
	text-align:right;
	padding:0 5px 0 0;
}
#cntctLocTxt {
	text-align:left;
	padding:0px;
	margin-top:10px;
}
p.bluMsg {
	padding:0;
	margin:0;
	font-size: 9px;
	color: #006699;
	font-style:italic;
	
}
/*company summary contacts view*/
#cmpyInfo h3 {
	position:relative;
	font-size: 14px;
	color: #000000;
	font-weight: bold;
	background-image:none;
	margin:0;
	padding:12px 0 15px 0;
}
#cmpyInfo h4 {
	position:relative;
	font-size: 11px;
	color: #006699;
	font-weight: bold;
	background-image:none;
	margin:0;
	padding:0;
}

#cmpyView {
	width:770px;
	position:relative;

}
.cmpyRsltHd {
	float:left;
	position:relative;
	width:620px;
	height: 15px;

}
.cmpyViewSumBox {
	width:555px;
	background-color:#999999;
	padding: 0 0 1px 0;
	margin: 0;
}
.cmpyViewSumCon {
	width: 553px;
	height: expression('225px'); 
	margin:0 1px 0 1px;
	padding:10px 0 0 0;
	background-color: #C2DEF2;
	background-repeat: no-repeat;
}
.cmpyViewSumWht {
	width: 533px;
	margin:0 10px 0 10px;
	padding:0;
	background-color: #FFFFFF;
}
.cmpyViewSumPad {
	width: 513px;
	margin:0 10px 0 10px;
	padding:0;
	background-color: #FFFFFF;
}
.srchSumBox {
	width:200px;
	position:relative;
	background-color:#999999;
	padding: 0 0 1px 0;
	margin: 0;
}

.srchSumCon {
	width: 198px;
	position: relative;
	display:block;
	margin:0 1px 0 1px;
	background-color: #e6e6e6;
}
.srchSumPad {
	width: 178px;
	position: relative;
	margin:0 10px 0 10px;
	padding: 0;
	background-color: #e6e6e6;
}
#srchSav {
	float:left;
	position:relative;
	display:block;
	width:100px;
	line-height:20px;

}
.cmpySrchHd {
	width: 200px;
	height:25px;
	line-height:25px;
	margin-top:5px;
	background-color:#006699;
	background-repeat: no-repeat;
	text-align:center;
	font-size:14px;
	font-weight:bold;
	color:#ffffff;
}
.cmpyViewHd {
	width: 530px;
	height:30px;
	margin:0;
	padding:0;
	border:0; 
}
.cmpyViewHd .tabWhite {
	float:left;
	display:inline;
	width: 120px;
	height:25px;
	line-height:25px;
	margin-top:5px;
	background-repeat: no-repeat;
	text-align:center;
	font-size:13px;
	font-weight:bold;
}

.cmpyViewHd .tabBlue {
	float:left;
	display:inline;
	width: 120px;
	height:25px;
	line-height:25px;
	margin:5px 5px 0 0;
	background-repeat: no-repeat;
	text-align:center;
	font-size:13px;
	font-weight:bold;
	color:#006699;
}
#cmpySrch {
	float:left;
	display:inline;
	width: 200px;
	margin: 0 15px 0 0;
}
.cmpySrchHdnFlds { 
	width:178px;
	position:relative;
	display:block;
    	height: 5px;
    	line-height: 5px;
    	font-size: 5px;
	padding: 0px;
	margin: 0px;
	border: 0px;
	background-color: #e6e6e6;
}
#cmpyInfo {
	float:left;
	display:block;
	width: 555px;
	height: expression('250px');
	padding-bottom:-5px expression('0');

}
#cmpySrch input, #cmpySrch select {
	width: 178px;
	height:20px;
	margin: 0 0 5px 0;
}
#cmpySrch .checkbox {
	width: 15px;
	margin: 0;
	padding:0;
}
#cmpySrch p {
	text-align:right;
	margin: 0;
	padding:0 0 5px 0;
}
#cmpyViewInfo p {
	margin: 0;
	padding:0;
}
.viewGrp {
	position:relative;
	margin:0;
	padding: 0 0 13px 0;
}

.vertLine { 
    float:left;
	position:relative;
	display:block;
	height: 110px;
	width:3px;
    	line-height: 110px;
    	font-size: 3px;
	padding: 0px;
	margin: 0px;
	border: 0px;
	background-color: #C2DEF2;
}
#cmpyLoc { 
    float:left;
	position:relative;
	display:block;
	width:150px;
    	padding: 0px;
	margin: 0px 10px 0 0;
	border: 0px;
}
#cmpySiz { 
    	float:left;
	position:relative;
	display:block;
	width:95px;
    	padding: 0px;
	margin: 0px 10px 0 10px;
	border: 0px;
}
#cmpyIndy { 
    	float:left;
	position:relative;
	display:block;
    	padding: 0px;
	margin: 0px ;
	border: 0px;
}
#cmpyIndy #indyGrp {
	float:left;
	position:relative;
	display:block;
	width:;
	margin:0 10px 0 0;
	padding: 0;
}
#cmpyIndy #subIndyGrp {
	float:left;
	position:relative;
	display:block;
	width:0px;
	margin:0;
	padding: 0;
}
#cmpyViewBtm {
	width:320px;
	padding: 6px 0 5px 0;
}
#btnChllg {
	width:120px;
	height:25px;
	line-height:23px;
	background-repeat: no-repeat;
	margin: 10 0 0 200px;

}

.btn125x25{
	color:white;
	width:125px;
	height:25px;
	line-height:23px;
	background-repeat: no-repeat;
	margin: 7 0 0 20px;
	text-align:center;
	text-decoration:none;
	cursor:pointer;
	font-weight:bold;

}


.btn175x25{
	color:white;
	width:175px;
	height:25px;
	line-height:23px;
	background-repeat: no-repeat;
	margin: 7 0 0 20px;
	text-align:center;
	text-decoration:none;
	cursor:pointer;
	font-weight:bold;
}

.btn200x25{
	color:white;
	width:200px;
	height:25px;
	line-height:23px;
	background-repeat: no-repeat;
	margin: 7 0 0 20px;
	text-align:center;
	text-decoration:none;
	cursor:pointer;
	font-weight:bold;

}

.btn125x25 a{
	width:125px;
	height:25px;
	line-height:23px;
	background-repeat: no-repeat;
	margin: 7 0 0 20px;
	text-decoration:none;
	cursor:pointer;
	font-weight:bold;

}

.btnGo{
	color:white;
	width:60px;
	height:25px;
	background-repeat: no-repeat;
	margin: 7 5 5 5px;
	text-align:center;
	text-decoration:none;
	cursor:pointer;
	font-weight:bold;

}


#btnSrchInCo{
	color:#FFFFFF;
	width:120px;
	height:25px;
	line-height:23px;
	background-repeat: no-repeat;
	margin: 0  0 5 0;

}

#btnChllg a {
	text-decoration:none;
	color:#FFFFFF;
	font-weight:bold;
	padding: 0 10px 0 12px;
}

#toggle {visibility:hidden;}

/** hover tips on search summary**/

.tip{
 position:relative;
 transparency:none;
 visibility:visible;
 cursor:pointer;
 font-size:11px;
 z-index:401;

 }

.paramList{  
	transparency:none;
	position:absolute;
	text-decoration:none;
	background-color:white;
	padding: 4px;
	visibility:hidden;
	opacity:1;
	border:1px solid black;	
	z-index:auto;

}

.rsltsMsgBar{
width:460px;

}


checkbox{
background-color:inherit;
}

radio{
background-color:inherit;
}

.bgInherit{
background-color:#E6E6E6  !important;
}


#rsltsMsgBar{
width:580px;
margin-bottom:6px;

}
/*****searching screen***/
#rsltsDisp{
display:none;
}

#srchDisp{
display:block;
}

#countDisplay, #countDisplay2{
font-weight:bold;
}

#countDisplay.top{
font:inherit;


}

#hideLnk{
visibility:visible;
color:white;

}

#showLnk{
visibility:hidden;
color:white;
}


/*** default disabled label colors for search forms***/

#metroLabel, #subindustryLabel,  #metroLabel{
color:#999999;
}




</style></head><body id="splashBody">
	
<script>

    
    
/* create the top-level industry objects */
var debug = false;
if (blankLabel == null) {
    var blankLabel = "-Any-";   
}
var industries = new Array(23);
industries[0] =  new Industry (blankLabel, 0);
industries[1] = new Industry ("Agriculture & Mining", 1010000);
industries[2] = new Industry ("Business Services", 1020000);
industries[3] = new Industry ("Computers & Electronics", 1030000);
industries[4] = new Industry ("Conglomerates", 1040000);
industries[5] = new Industry ("Education", 1050000);
industries[6] = new Industry ("Energy & Utilities", 1060000);
industries[7] = new Industry ("Financial Services", 1070000);
industries[8] = new Industry ("Food & Beverage", 1080000);
industries[9] = new Industry ("Government", 1090000);
industries[10] = new Industry ("Healthcare & Pharmaceuticals", 1100000);
industries[11] = new Industry ("Manufacturing", 1110000);
industries[12] = new Industry ("Media & Entertainment", 1120000);
industries[13] = new Industry ("Non-Profit", 1130000);
industries[14] = new Industry ("Real Estate & Construction", 1140000);
industries[15] = new Industry ("Recreation & Leisure", 1150000);
industries[16] = new Industry ("Retail & Wholesale", 1160000);
industries[17] = new Industry ("Services (Miscellaneous)", 1170000);
industries[18] = new Industry ("Software & Internet", 1180000);
industries[19] = new Industry ("Telecommunications", 1190000);
industries[20] = new Industry ("Transportation & Storage", 1200000);
industries[21] = new Industry ("Travel & Accommodation", 1210000);
industries[22] = new Industry ("Other", 1990000);


/* make subindustry objects, assign to parent industries */

var subind = new Array(7);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Farming and Ranching", 1010100);
subind[2] =  new Industry ("Fishing, Hunting and Trapping", 1010200);
subind[3] =  new Industry ("Forestry and Logging", 1010300);
subind[4] =  new Industry ("Machinery and Equipment", 1010400);
subind[5] =  new Industry ("Mining and Quarrying", 1010500);
subind[6] =  new Industry ("Other", 1019900);
industries[1].subind = subind;

var subind = new Array(11);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Accounting and Tax Preparation", 1020100);
subind[2] =  new Industry ("Advertising, Marketing and PR", 1020200);
subind[3] =  new Industry ("Facilities Management and Maintenance", 1020300);
subind[4] =  new Industry ("HR, Recruiting and Payroll Services", 1020400);
subind[5] =  new Industry ("Data and Records Management", 1020500);
subind[6] =  new Industry ("Legal Services", 1020600);
subind[7] =  new Industry ("Management Consulting", 1020700);
subind[8] =  new Industry ("Sales Services", 1020800);
subind[9] =  new Industry ("Security Services", 1020900);
subind[10] =  new Industry ("Other", 1029900);
industries[2].subind = subind;

var subind = new Array(11);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Audio, Video and Photography", 1030100);
subind[2] =  new Industry ("Computers, Parts and Repair", 1030200);
subind[3] =  new Industry ("Consumer Electronics, Parts and Repair", 1030300);
subind[4] =  new Industry ("Instruments and Controls", 1030400);
subind[5] =  new Industry ("IT and Network Services and Support", 1030500);
subind[6] =  new Industry ("Networking Equipment and Systems", 1030600);
subind[7] =  new Industry ("Office Machinery and Equipment", 1030700);
subind[8] =  new Industry ("Peripherals", 1030800);
subind[9] =  new Industry ("Semiconductors and Microchips", 1030900);
subind[10] =  new Industry ("Other", 1039900);
industries[3].subind = subind;

var subind = new Array(2);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Other", 1049900);
industries[4].subind = subind;

var subind = new Array(7);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Colleges and Universities", 1050100);
subind[2] =  new Industry ("Elementary and Secondary Schools", 1050200);
subind[3] =  new Industry ("Libraries, Archives and Museums", 1050300);
subind[4] =  new Industry ("Sports, Arts and Recreation Instruction", 1050400);
subind[5] =  new Industry ("Technical, Trade and Business Schools", 1050500);
subind[6] =  new Industry ("Other", 1059900);
industries[5].subind = subind;

var subind = new Array(8);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Alternative Energy Sources", 1060100);
subind[2] =  new Industry ("Gas and Electric Utilities", 1060200);
subind[3] =  new Industry ("Gasoline and Oil Refineries", 1060300);
subind[4] =  new Industry ("Sewage Treatment Facilities", 1060400);
subind[5] =  new Industry ("Waste Management and Recycling", 1060500);
subind[6] =  new Industry ("Water Treatment and Utilities", 1060600);
subind[7] =  new Industry ("Other", 1069900);
industries[6].subind = subind;

var subind = new Array(9);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Banks", 1070100);
subind[2] =  new Industry ("Credit Cards and Related Services", 1070200);
subind[3] =  new Industry ("Insurance and Risk Management", 1070300);
subind[4] =  new Industry ("Investment Banking and Venture Capital", 1070400);
subind[5] =  new Industry ("Lending and Mortgage", 1070500);
subind[6] =  new Industry ("Securities Agents and Brokers", 1070600);
subind[7] =  new Industry ("Trust, Fiduciary, and Custody Activities", 1070700);
subind[8] =  new Industry ("Other", 1079900);
industries[7].subind = subind;

var subind = new Array(7);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Alcoholic Beverages", 1080100);
subind[2] =  new Industry ("Food Wholesalers and Processing", 1080200);
subind[3] =  new Industry ("Nonalcoholic Beverages", 1080300);
subind[4] =  new Industry ("Restaurants and Bars", 1080400);
subind[5] =  new Industry ("Grocery and Food Specialty Stores", 1080500);
subind[6] =  new Industry ("Other", 1089900);
industries[8].subind = subind;


var subind = new Array(6);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("International Bodies and Organizations", 1090100);
subind[2] =  new Industry ("Local Government", 1090200);
subind[3] =  new Industry ("National Government", 1090300);
subind[4] =  new Industry ("State/Provincial Government", 1090400);
subind[5] =  new Industry ("Other", 1099900);
industries[9].subind = subind;

var subind = new Array(10);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Biotechnology", 1100100);
subind[2] =  new Industry ("Diagnostic Laboratories", 1100200);
subind[3] =  new Industry ("Doctors and Health Care Practitioners", 1100300);
subind[4] =  new Industry ("Hospitals", 1100400);
subind[5] =  new Industry ("Medical Supplies and Equipment", 1100500);
subind[6] =  new Industry ("Personal Health Care Products", 1100600);
subind[7] =  new Industry ("Pharmaceuticals", 1100700);
subind[8] =  new Industry ("Residential and Long-Term Care Facilities", 1100800);
subind[9] =  new Industry ("Other", 1109900);
industries[10].subind = subind;

var subind = new Array(9);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Aerospace and Defense", 1110100);
subind[2] =  new Industry ("Automobiles, Boats and Motor Vehicles", 1110200);
subind[3] =  new Industry ("Chemicals and Petrochemicals", 1110300);
subind[4] =  new Industry ("Heavy Machinery", 1110400);
subind[5] =  new Industry ("Paper and Paper Products", 1110500);
subind[6] =  new Industry ("Textiles, Apparel and Accessories", 1110600);
subind[7] =  new Industry ("Tools, Hardware and Light Machinery", 1110700);
subind[8] =  new Industry ("Other", 1119900);
industries[11].subind = subind;

var subind = new Array(7);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Adult Entertainment", 1120100);
subind[2] =  new Industry ("Motion Picture and Recording Industry", 1120200);
subind[3] =  new Industry ("Newspapers, Books and Periodicals", 1120300);
subind[4] =  new Industry ("Performing Arts", 1120400);
subind[5] =  new Industry ("Radio and Television Broadcasting", 1120500);
subind[6] =  new Industry ("Other", 1129900);
industries[12].subind = subind;

var subind = new Array(7);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Charitable Organizations and Foundations", 1130100);
subind[2] =  new Industry ("Social and Membership Organizations", 1130200);
subind[3] =  new Industry ("Professional Associations", 1130300);
subind[4] =  new Industry ("Religious Organizations", 1130400);
subind[5] =  new Industry ("Trade Groups and Labor Unions", 1130500);
subind[6] =  new Industry ("Other", 1139900);
industries[13].subind = subind;



var subind = new Array(6);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Architecture, Engineering and Design", 1140100);
subind[2] =  new Industry ("Construction and Remodeling", 1140200);
subind[3] =  new Industry ("Construction Equipment and Supplies", 1140300);
subind[4] =  new Industry ("Property Leasing and Management", 1140400);
subind[5] =  new Industry ("Real Estate Agents and Appraisers", 1140500);
subind[6] =  new Industry ("Real Estate Investment and Development", 1140600);
subind[7] =  new Industry ("Other", 1149900);
industries[14].subind = subind;

var subind = new Array(6);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Amusement Parks and Attractions", 1150100);
subind[2] =  new Industry ("Gambling and Gaming Industries", 1150200);
subind[3] =  new Industry ("Participatory Sports and Recreation", 1150300);
subind[4] =  new Industry ("Spectator Sports and Teams", 1150400);
subind[5] =  new Industry ("Other", 1159900);
industries[15].subind = subind;

var subind = new Array(1);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Other", 1169900);
industries[16].subind = subind;

var subind = new Array(2);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Other", 1179900);
industries[17].subind = subind;

var subind = new Array(5);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Data Analytics, Management and Storage", 1180100);
subind[2] =  new Industry ("E-commerce and Internet Businesses", 1180200);
subind[3] =  new Industry ("Games and Gaming", 1180300);
subind[4] =  new Industry ("Software", 1180400);
subind[5] =  new Industry ("Other", 1189900);
industries[18].subind = subind;

var subind = new Array(6);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Equipment, Products and Accessories", 1190100);
subind[2] =  new Industry ("Telephone Service Providers and Carriers", 1190200);
subind[3] =  new Industry ("Video and Teleconferencing", 1190300);
subind[4] =  new Industry ("Wireless and Mobile", 1190400);
subind[5] =  new Industry ("Other", 1199900);
industries[19].subind = subind;

var subind = new Array(9);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Air Couriers and Cargo Services", 1200100);
subind[2] =  new Industry ("Airport, Harbor and Terminal Operations", 1200200);
subind[3] =  new Industry ("Freight Hauling (Rail and Truck)", 1200300);
subind[4] =  new Industry ("Marine and Inland Shipping", 1200400);
subind[5] =  new Industry ("Moving Companies and Services", 1200500);
subind[6] =  new Industry ("Postal, Express Delivery, and Couriers", 1200600);
subind[7] =  new Industry ("Warehousing and Storage", 1200700);
subind[8] =  new Industry ("Other", 1209900);
industries[20].subind = subind;

var subind = new Array(10);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Cruise Ship Operations", 1210100);
subind[2] =  new Industry ("Hotels, Motels and Lodging", 1210200);
subind[3] =  new Industry ("Passenger Airlines", 1210300);
subind[4] =  new Industry ("Rental Cars", 1210400);
subind[5] =  new Industry ("Resorts and Casinos", 1210500);
subind[6] =  new Industry ("Taxi and Limousine Services", 1210600);
subind[7] =  new Industry ("Trains, Buses and Transit Systems", 1210700);
subind[8] =  new Industry ("Travel Agents & Services", 1210800);
subind[9] =  new Industry ("Other", 1219900);
industries[21].subind = subind;

var subind = new Array(2);
subind[0] =  new Industry (blankLabel, 0);
subind[1] =  new Industry ("Other", 1999900);
industries[22].subind = subind;

function populateIndustryList (ctrl) {
    for (var i = 0; i < industries.length; i++)
        appendOption (ctrl, industries[i].label, industries[i].value);

}




function changeSubindustryList (ctrl1, ctrl2, ctrl2Label) {
	var _counter =0;
    var mainValue = ctrl1;

    if (mainValue.selectedIndex == 0 ) {
        ctrl2.options.length = 0;
        appendOption (ctrl2, blankLabel, 0);
        ctrl2.disabled = true;
        if (ctrl2Label != null)
            ctrl2Label.style.color = "#999999";
        return;
    }else{
   

   		for(i=0;i<mainValue.length;i++){
   			if(mainValue.options[i].selected == true){
   				_counter++;
   			}	
   		}
    
    }
	

	if ( (mainValue.options[0].selected != true) && ( _counter  >  0)  ){
	 var mainind =   getIndustryFromValue (mainValue.value);
	 
 
	    ctrl2.disabled = false;
	
		    ctrl2.options.length = 0;
		  
			    for (var i = 0; i < mainind.subind.length; i++){
			        appendOption (ctrl2, mainind.subind[i].label, mainind.subind[i].value);
			    
			    }
	}else{
				return;
	}
  

}


function selectIndustry(ctrl1, val1) {
    for (var i = 0; i < ctrl1.options.length; i++) {
        if (ctrl1.options[i].value == val1) {
            ctrl1.options[i].selected = true;
            break;
        }
    }
            
}

function selectIndustries(ctrl, val) {
    var inds = val.split(",");
    for (var i = 0; i < inds.length; i++)
        selectIndustry (ctrl, inds[i]);
}

function appendOption (ctrl, label, value) {
    var opt = new Option(label, value);
    ctrl.options[ctrl.options.length] = opt;  
}

function Industry (label, value) {
    this.label = label;
    this.value = value;
    this.subind = null;
    return this;   
}

function getIndustryFromValue (val) {
   
    if (val == 1990000) {
    return industries[22];
    }
    else {
    
    return industries[(val*1 - 1000000) / 10000];   
    }
}




function doIndChange() {
    
    var ind2Label = getElemById ("subindustryLabel");
	var _counter = 0;


		for (i=0; i < ind1.length; i++){
			if(ind1.options[i].selected){
			_counter++;
			}
		}
	
		if(ind1.options[0].selected  || _counter > 1){
			ind2.options.length = 0;
			ind2.disabled = true;
			ind2Label.style.color = '#999999';
		}else{
			ind2.disabled = 'false';
		
			changeSubindustryList (ind1, ind2, ind2Label);
	
	}

}


</script>
<script>


/* create the top-level country objects */
var debug = false;
var numCountries = 10;
if (blankLabel == null) {
    var blankLabel = "-Any-";   
}
var countries = new Array(numCountries);
countries[0] = new Country (blankLabel, "");
countries[1] = new Country ("USA", "9000");
countries[2] = new Country ("Australia", "1000");
countries[3] = new Country ("Canada", "2000");
countries[4] = new Country ("India", "3000");
countries[5] = new Country ("Ireland", "4000");
countries[6] = new Country ("New Zealand", "5000");
countries[7] = new Country ("Singapore", "6000");
countries[8] = new Country ("South Africa", "7000");
countries[9] = new Country ("United Kingdom", "8000");

/* make metrocode objects, assign to country */

var mcode = new Array(22);
mcode[0] =  new MetroCode (blankLabel, 0);
mcode[1] =  new MetroCode ("Atlanta", 101);
mcode[2] =  new MetroCode ("Baltimore/Washington", 102);
mcode[3] =  new MetroCode ("Boston", 103);
mcode[4] =  new MetroCode ("Chicago", 104);
mcode[5] =  new MetroCode ("Cleveland", 130);
mcode[6] =  new MetroCode ("Dallas", 105);
mcode[7] =  new MetroCode ("Denver", 106);
mcode[8] =  new MetroCode ("Detroit", 107);
mcode[9] =  new MetroCode ("Houston", 131);
mcode[10] =  new MetroCode ("Los Angeles", 108);
mcode[11] =  new MetroCode ("Miami", 109);
mcode[12] =  new MetroCode ("Minneapolis/St. Paul", 110);
mcode[13] =  new MetroCode ("New York", 111);
mcode[14] =  new MetroCode ("Philadelphia", 112);
mcode[15] =  new MetroCode ("Phoenix", 113);
mcode[16] =  new MetroCode ("Portland", 114);
mcode[17] =  new MetroCode ("Saint Louis", 132);
mcode[18] =  new MetroCode ("Salt Lake City", 115);
mcode[19] =  new MetroCode ("San Diego", 116);
mcode[20] =  new MetroCode ("San Francisco", 117);
mcode[21] =  new MetroCode ("Seattle", 118);
//Cleveland,Houston,Saint Louis is added later and the highest code is 132
countries[1].mcode = mcode;

var mcode = new Array(2);
mcode[0] =  new MetroCode (blankLabel, 0);
mcode[1] =  new MetroCode ("Calgary", 201);
mcode[2] =  new MetroCode ("Edmonton", 202);
mcode[3] =  new MetroCode ("Montreal", 203);
mcode[4] =  new MetroCode ("Ottawa", 204);
mcode[5] =  new MetroCode ("Quebec", 205);
mcode[6] =  new MetroCode ("Toronto", 206);
mcode[7] =  new MetroCode ("Vancouver", 207);
mcode[8] =  new MetroCode ("Victoria", 208);
mcode[9] =  new MetroCode ("Winnipeg", 209);
countries[3].mcode = mcode;

function populateCountriesList (ctrl) {

    for (var i = 0; i < countries.length; i++)
        appendOption (ctrl, countries[i].label, countries[i].value, i == 1);
}

function isValidAreaCode(countryIndex, stateIndex, phone) {
	var country = countries[countryIndex];
	var state = country.states[stateIndex];
	if (state.areacode.indexOf(getUSAreaCode(phone)) == - 1) {
		return false;
	}
	return true;
}

function getUSAreaCode (phone) {
	var areaCode = "";
	var re = /[-.() ]/g;
	phone = phone.replace(re, '');

	if (phone.indexOf("+1") == 0) {
		phone = phone.substring(2);
		if (phone.length > 3)
			areaCode = phone.substring(0,3);
		else
			areaCode = phone;
	} else if (phone.indexOf("1") == 0) {
		phone = phone.substring(1);
		if (phone.length > 3)
			areaCode = phone.substring(0,3);
		else
			areaCode = phone;
	} else if (phone.length > 3) {
		areaCode = phone.substring(0,3);
	} else {
		areaCode = phone;
	}
	return areaCode;
}

function changeMetroList (ctrl1, ctrl2) {
    var mainValue = ctrl1.options[ctrl1.selectedIndex].value;
    //if the user selects no country, clear the 2nd
    if (mainValue == 0 || mainValue == "") {
        ctrl2.options.length = 0;
        appendOption (ctrl2, "", 0);
        return;
    }
    var con = getCountryFromValue (mainValue);
    //clear options from 2nd control
    ctrl2.options.length = 0;
    if (con.mcode == null) {
        ctrl2.disabled = true;
        try {
        	document.getElementById('metroLabel').style.color = '#999999';
        } catch (e){}

        return;
    }
    ctrl2.disabled = false;
    try {
     	document.getElementById('metroLabel').style.color = '#333333';
    } catch (e){}
    for (var i = 0; i < con.mcode.length; i++)
        appendOption (ctrl2, con.mcode[i].label, con.mcode[i].value);
    
    
    if (debug) {
        var vals = "Country: " + con.label + ": " + con.value + "\n\nMetros:\n\n";
        for (var i = 0; i < con.mcode.length; i++) {
            
            if(con.mcode[i].value != 0) {
                vals += con.mcode[i].label + ": " + con.mcode[i].value + "\n";
            }
        }
        alert (vals);
    }

}

function changeStateList (ctrl1, ctrl2) {

var _counter = 0;

	for(var i = 1; i< ctrl1.length; i++){//ignore default val
	
		if(ctrl1.options[i].selected == true){
			_counter++;
		}
	}
	

	if(_counter < 2){
	    var mainValue = ctrl1.options[ctrl1.selectedIndex].value;
	    //if the user selects no country, clear the 2nd
	    if (mainValue == 0 || mainValue == "" || mainValue  == blankLabel|| mainValue.size > 1) {
	        ctrl2.options.length = 0;
	        appendOption (ctrl2, "", "");
	        return;
	    }
    }
    var con = getCountryFromValue (mainValue);
    //clear options from 2nd control
    ctrl2.options.length = 0;
    if (con.states == null) {
        ctrl2.disabled = true;
        try {
	        document.getElementById('stateLabel').style.color = '#999999';
        } catch (e){}
        return;
    }
    ctrl2.disabled = false;
    try {
    	document.getElementById('stateLabel').style.color = '#333333';
    } catch (e){}
 

    for (var i = 0; i < con.states.length; i++)
        appendOption (ctrl2, con.states[i].label, con.states[i].value);
    
    
    if (debug) {
        var vals = "Country: " + con.label + ": " + con.value + "\n\nStates:\n\n";
        for (var i = 0; i < con.states.length; i++) {
            
            if(con.mcode[i].value != 0) {
                vals += con.states[i].label + ": " + con.states[i].value + "\n";
            }
        }
        alert (vals);
    }
	
}


function selectCountry(ctrl1, val1) {
    for (var i = 0; i < ctrl1.options.length; i++) {
        if (ctrl1.options[i].value == val1) {
            ctrl1.options[i].selected = true;
            break;
        }
    }
}

function selectCountries(ctrl, val) {
    var countries = val.split(",");
    for (var i = 0; i < countries.length; i++)
        selectCountry (ctrl, countries[i]);
}

function selectMetro(ctrl1, val1) {

    for (var i = 0; i < ctrl1.options.length; i++) {
   // alert(ctrl1.options[i].value, val1);
        if (ctrl1.options[i].value == val1) {
            ctrl1.options[i].selected = true;
            break;
        }
    }
}


function selectMetros(ctrl, val, state) {

	var _counter = 0;
	var _metros = val.split(",");
	var _states = state;
	for(var i = 1; i<_states.length; i++){//ignore default val
	
		if(_states.options[i].selected == true){
			_counter++;
		}
	}
	

	if(_counter == 0){
    	for (var i = 0; i < _metros.length; i++){
        selectMetro (ctrl, _metros[i]);
		}
	}
	
   
}

function selectStates(ctrl, val) {
    var states = val.split(",");
    for (var i = 0; i < states.length; i++)
        selectState (ctrl, states[i]);
}

function selectState(ctrl1, val1) {
    selectMetro(ctrl1, val1);
}

function appendOption (ctrl, label, value, sel) {
    var opt = new Option(label, value);
    ctrl.options[ctrl.options.length] = opt;
}

function Country (label, value) {
    this.label = label;
    this.value = value;
    this.mcode = null;
    this.states = null;
    return this;   
}

function MetroCode (label, value) {
    this.label = label;
    this.value = value;
    return this;   
}

function State (label, value, arecode) {
    this.label = label;
    this.value = value;
    this.areacode = areacode;
    return this;   
}

function getCountryFromValue (val) {
    for (var i = 0; i < numCountries; i++) {
        if (val == countries[i].value)
            return countries[i];
    } 
    return countries[0];
}

/* make state list objects, assign to country */

var states = new Array(9);
states[0] = new State(blankLabel, "");
states[1] = new State("Australian Capital Territory (ACT)", "1001");
states[2] = new State("New South Wales (NSW)", "1002");
states[3] = new State("Northern Territory (NT)", "1003");
states[4] = new State("Queensland (QLD)", "1004");
states[5] = new State("South Australia (SA)", "1005");
states[6] = new State("Tasmania (TAS)", "1006");
states[7] = new State("Victoria (VIC)", "1007");
states[8] = new State("Western Australia (WA)", "1008");
countries[2].states = states;

var states = new Array(14);
states[0] = new State(blankLabel, "");
states[1] = new State("Alberta (AB)", "2001");
states[2] = new State("British Columbia (BC)", "2002");
states[3] = new State("Manitoba (MB)", "2003");
states[4] = new State("New Brunswick (NB)", "2004");
states[5] = new State("Newfoundland and Labrador (NL)", "2005");
states[6] = new State("Northwest Territories (NT)", "2007");
states[7] = new State("Nova Scotia (NS)", "2006");
states[8] = new State("Nunavut (NU)", "2008");
states[9] = new State("Ontario (ON)", "2009");
states[10] = new State("Prince Edward Island (PE)", "2010");
states[11] = new State("Quebec (QC)", "2011");
states[12] = new State("Saskatchewan (SK)", "2012");
states[13] = new State("Yukon (YT)", "2013");
countries[3].states = states;          


var states = new Array(60);
var areacode = null;
//Integer code for the states are assigned for two letter sorting
states[0] = new State(blankLabel, "");
areacode = "205|251|256|334";
states[1] = new State("Alabama (AL)", "9002", areacode);
areacode = "907";
states[2] = new State("Alaska (AK)", "9001", areacode); 
areacode = "480|520|602|623|928";
states[3] = new State("Arizona (AZ)", "9004", areacode); 
areacode = "479|501|870";
states[4] = new State("Arkansas (AR)", "9003", areacode); 
areacode = "209|213|310|323|408|415|510|530|559|562|619|626|650|661|707|714|760|805|818|831|858|909|916|925|949|951";
states[5] = new State("California (CA)", "9005", areacode); 
areacode = "303|719|720|970";
states[6] = new State("Colorado (CO)", "9006", areacode); 
areacode = "203|860";
states[7] = new State("Connecticut (CT)", "9007", areacode); 
areacode = "302";
states[8] = new State("Delaware (DE)", "9009", areacode); 
areacode = "202";
states[9] = new State("District Of Columbia (DC)", "9008", areacode); 
areacode = "239|246|305|321|352|386|407|561|727|772|786|813|850|863|904|941|954";
states[10] = new State("Florida (FL)", "9010", areacode); 
areacode = "229|404|478|678|706|770|912";
states[11] = new State("Georgia (GA)", "9011", areacode); 
areacode = "808";
states[12] = new State("Hawaii (HI)", "9012", areacode); 
areacode = "208";
states[13] = new State("Idaho (ID)", "9014", areacode); 
areacode = "217|224|309|312|618|630|708|773|815|847";
states[14] = new State("Illinois (IL)", "9015", areacode); 
areacode = "219|260|317|574|765|812";
states[15] = new State("Indiana (IN)", "9016", areacode); 
areacode = "319|515|563|641|712";
states[16] = new State("Iowa (IA)", "9013", areacode); 
areacode = "316|620|785|913";
states[17] = new State("Kansas (KS)", "9017", areacode); 
areacode = "270|502|606|859";
states[18] = new State("Kentucky (KY)", "9018", areacode); 
areacode = "225|318|337|504|985";
states[19] = new State("Louisiana (LA)", "9019", areacode); 
areacode = "207";
states[20] = new State("Maine (ME)", "9022", areacode); 
areacode = "240|301|331|410|443";
states[21] = new State("Maryland (MD)", "9021", areacode);
areacode = "413|508|617|774|781|978";
states[22] = new State("Massachusetts (MA)", "9020", areacode); 
areacode = "231|248|269|313|517|586|616|734|810|906|989";
states[23] = new State("Michigan (MI)", "9023", areacode); 
areacode = "218|320|507|612|651|763|952";
states[24] = new State("Minnesota (MN)", "9024", areacode); 
areacode = "228|601|662";
states[25] = new State("Mississippi (MS)", "9026", areacode); 
areacode = "314|417|573|636|660|816";
states[26] = new State("Missouri (MO)", "9025", areacode); 
areacode = "406";
states[27] = new State("Montana (MT)", "9027", areacode); 
areacode = "308|402";
states[28] = new State("Nebraska (NE)", "9030", areacode); 
areacode = "702|775";
states[29] = new State("Nevada (NV)", "9034", areacode); 
areacode = "603";
states[30] = new State("New Hampshire (NH)", "9031", areacode); 
areacode = "201|609|732|856|862|908|973";
states[31] = new State("New Jersey (NJ)", "9032", areacode); 
areacode = "505";
states[32] = new State("New Mexico (NM)", "9033", areacode); 
areacode = "212|315|516|518|585|607|631|646|716|718|845|914|917";
states[33] = new State("New York (NY)", "9035", areacode); 
areacode = "252|336|704|828|910|919";
states[34] = new State("North Carolina (NC)", "9028", areacode); 
areacode = "701";
states[35] = new State("North Dakota (ND)", "9029", areacode); 
areacode = "216|330|419|440|513|614|740|937|999";
states[36] = new State("Ohio (OH)", "9036", areacode); 
areacode = "405|580|918";
states[37] = new State("Oklahoma (OK)", "9037", areacode); 
areacode = "503|541|971";
states[38] = new State("Oregon (OR)", "9038", areacode); 
areacode = "215|267|412|484|570|610|717|724|814";
states[39] = new State("Pennsylvania (PA)", "9039", areacode); 
areacode = "401";
states[40] = new State("Rhode Island (RI)", "9040", areacode); 
areacode = "803|843|864";
states[41] = new State("South Carolina (SC)", "9041", areacode); 
areacode = "605";
states[42] = new State("South Dakota (SD)", "9042", areacode); 
areacode = "423|615|731|865|901|931";
states[43] = new State("Tennessee (TN)", "9043", areacode); 
areacode = "210|214|254|281|325|361|409|432|469|512|682|713|806|817|830|832|903|915|936|940|956|972|979";
states[44] = new State("Texas (TX)", "9044", areacode); 
areacode = "435|801";
states[45] = new State("Utah (UT)", "9045", areacode); 
areacode = "802";
states[46] = new State("Vermont (VT)", "9047", areacode); 
areacode = "276|434|540|571|703|757|804";
states[47] = new State("Virginia (VA)", "9046", areacode); 
areacode = "206|253|360|425|509";
states[48] = new State("Washington (WA)", "9048", areacode); 
areacode = "304";
states[49] = new State("West Virginia (WV)", "9050", areacode); 
areacode = "262|414|608|715|920";
states[50] = new State("Wisconsin (WI)", "9049", areacode); 
areacode = "307";
states[51] = new State("Wyoming (WY)", "9051", areacode); 
states[52] = new State("------", "  ");
// US territories:
areacode = "684";
states[53] = new State("American Samoa (AS)", "9101", areacode); 
areacode = "";
states[54] = new State("Federated States Of Micronesia (FM)", "9102", areacode); 
areacode = "671";
states[55] = new State("Guam (GU)", "9103", areacode); 
areacode = "";
states[56] = new State("Marshall Islands (MH)", "9104", areacode); 
areacode = "670";
states[57] = new State("Northern Mariana Islands (MP)", "9105", areacode); 
areacode = "";
states[58] = new State("Palau (PW)", "9107", areacode); 
areacode = "787";
states[59] = new State("Puerto Rico (PR)", "9106", areacode); 
areacode = "340";
states[60] = new State("Virgin Islands (VI)", "9108", areacode); 
countries[1].states = states;




function doMetroChange() {
    

    //enable area and zip fields
    getElemById("areaLabel").style.color = "#333333";
    getElemById("zipLabel").style.color = "#333333";
   try{ form.cnZip.disabled = false;
    form.cnArea1.disabled = false;
}catch(e){}
try{form.zip.disabled = false;
	form.area1.disabled = false;
	}catch(e){}
	
	var	_counter = 0;
	var metroLabel = document.getElementById('metroLabel');
	var stateLabel = document.getElementById('stateLabel');

		for (i=0; i < country.length; i++){
			if(country.options[i].selected){
			_counter++;
			}
		}



		if(country.options[0].selected == true || _counter > 1){
			state.options.length = 0;
			metro.options.length = 0;
			state.disabled = true;
			metro.disabled = true;
			stateLabel.style.color = '#999999';
			metroLabel.style.color = '#999999';
	}else{

	stateLabel.style.color='#000000';
	metroLabel.style.color='#000000';


    changeStateList (country, state);
    var disable = state.disabled;
    getElemById("stateLabel").style.color = disable ? "#999999" : "#333333";
    changeMetroList (country, metro);
    getElemById("metroLabel").style.color = metro.disabled ? "#999999" : "#333333";
    handleMetroChange (metro);
	}

}


function handleMetroChange(ctrl) {
    if (ctrl.disabled || ctrl.options == null || ctrl.options.length == 0) return;
    var val = 0;
    try {
        val = ctrl.options[ctrl.selectedIndex].value;
    } catch (e) {}
    var disable = val != 0;
    var form = ctrl.form;
    
    try{
	if (disable) {
	    form.cnZip.value = "";
		form.cnArea1.value = "";
		form.cnStates.selectedIndex = 0;
	}
    form.cnZip.disabled = disable;
    form.cnArea1.disabled = disable;
    form.cnStates.disabled = disable;
    }catch(e){}
    
     try{
	if (disable) {
	    form.zip.value = "";
		form.area1.value = "";
		form.states.selectedIndex = 0;
	}
    form.zip.disabled = disable;
    form.area1.disabled = disable;
    form.states.disabled = disable;
    }catch(e){}
    
    
    getElemById("stateLabel").style.color = disable ? "#999999" : "#333333";
    getElemById("areaLabel").style.color = disable ? "#999999" : "#333333";
    getElemById("zipLabel").style.color = disable ? "#999999" : "#333333"; 
}

function getStateString(ctrl) {
	var ret = "";
	if (ctrl == null || ctrl.options == null)
	    return "";
	
    for (var i = 0; i < ctrl.options.length; i++) {
        if (ctrl.options[i].selected && ctrl.options[i].value != "") {
            
            ret += ctrl.options[i].value + ",";
        }
    }
    if (ret.length > 0) {
        ret = ret.substring (0, (ret.length - 1));
    }
    return ret;
}


function handleStateChange(ctrl){
clearMulti(metroField);
//metroField.options[0].value = '';
}
            


</script>
<script>
/*
@author: jerb
@date: 4/28/05
@desc: form field dependency manager for advanced search

*/



function callFromNavbar() {

	selectDefaultValues();

    populateCountriesList (country);

    selectCountries (country, countryValue);

	changeStateList (country, state); 

	selectStates (state, stateValue);

	changeMetroList (country, metro);

	selectMetros (metro, metroValue, state);

	populateIndustryList (ind1);

	selectIndustries (ind1, ind1Value); 

    changeSubindustryList (ind1, ind2);

	doIndChange();

	selectIndustries (ind2, ind2Value);

}


/**end callFromNavbar()**/







/*** utility methods**/

function doClearAdvanced (form) {

    if (form == null){ 
    	form = document.forms[0];
    }
    
   // if (form == null) return;
    for (var i = 0; i < form.elements.length; i++) {
	
		
        var field = form.elements[i];
	 
	            if (field.type == 'text') {
	             	field.value="";
	            }
	            else if(field.type == 'checkbox'){
	            field.checked = false;
	            }
	            else if(field.type == 'radio'){
	            		if(field.value == '0'){
	            		field.checked = true;
	            		}
	            }
	            else if(field.type == 'select-multiple'){
		       		clearMulti(field);
		       	}
		       	else if(field.type == 'select-one'){
           				field.options[0].selected = true;
           			
           		} 
           		else{
           	
           		}
 	}//end for loop

}


function clearMulti(field){

	var resetDisabled = false;

		if(field.disabled == true){
			field.disabled = false;
			resetDisabled = true;
		}

	         if(field.options){
	         	for(i=0; i < field.options.length; i++){
	         	field.options[i].selected = false;
	          	}
	          }	
	           	
           	try{field.options[0].selected = true;}catch(e){}
       	
			if(resetDisabled == true){
			field.disabled = true;
			}
}




function selectDefaultValues (form) {

    if (form == null){ 
            form = document.forms[0];
    }

   for (var i = 0; i < form.elements.length; i++) {
        var field = form.elements[i];
            if (field.type == 'select-multiple') {

                        selectDefault(field);

            }

    }

}

 

function selectDefault (field) {

            try {
                   var hasselected = false;
                    if (field.disabled != true && field.options.length > 0) {
                                for(i=0; i < field.options.length; i++){
                                            if (field.options[i].selected == true) {
                                                        hasselected = true;
                                                        break;
                                            }
                                }
                                if (hasselected == false) {
                                         field.options[0].selected = true;
                                }
                    }

        } catch (e) {
                    alert("exception: " + field.name);

        }
}





</script>
    
<script>

window.onload = handleLoad;
var onImages = new Array(4);
var offImages = new Array(4);
preloadImages();

var tab = 'gc';

var selectedTab = 0;
var utype = 1;
var corpNoAddContactType = 21;

function handleLoad() {
    try {
        callFromNavbar();
    } catch (e) {}
}


function preloadImages() {

}


</script>

<script>
var IE = navigator.appName.indexOf("Microsoft") != -1;
var DOM = document.getElementById;
var is_mac = navigator.userAgent.toLowerCase().indexOf("mac") != -1;
var jigsawWindow = true;
var helpWindow;
var pWindow;
var timeoutId = null;
var darkblue = "#002D60";
//var darkblue = "#666666";

var lightblue = "#DFEAF4";

function setPopupTimeout() {
    setTimeout("testPopup()",700);
}

function testPopup () {
    timeoutId = null;
    if ((pWindow==null) ||(typeof(pWindow)=="undefined") || (typeof(pWindow.location.hash)!="string"))
        alert("You must disable your popup killer to use this feature of Jigsaw.");
}



function makeLink (innerText, href) {
	var link = document.createElement("a");
	var textNode = document.createTextNode(innerText);
	link.style.whiteSpace = "nowrap";
	if (href != null && trim(href) != "")
	    link.href = href;
	
	link.appendChild (textNode);
	return link;	
}

function makeImg (imgPath, href) {
	var link = document.createElement("img");
	link.src = imgPath;
	if (href != null && trim(href) != "")
	    link.href = href;
	return link;	
}



function removeChildren (elem) {
    if (elem == null || elem.childNodes == null || !elem.childNodes.length) return;
    var len = elem.childNodes.length - 1;
    for (var i = len; i >= 0; i--) {
        elem.removeChild(elem.childNodes[i]);
    }
}

function showObject (object, show, visibilityOnly) {
	if (object == null) return;
	if (visibilityOnly == null) visibilityOnly = false;
	if (show) {
		object.style.visibility = "visible";
		if (!visibilityOnly) object.style.display = "block";
	} else {
		object.style.visibility = "hidden";
		if (!visibilityOnly) object.style.display = "none";
	}
}

function getInnerText (elem) {
	if (IE) return elem.innerText;
	var children = elem.childNodes;
	for (var i = 0; i < children.length; i++) {
		var child = children[i];
		if (child.nodeType == 3) return child.data;
	}
		
}

function setInnerText (elem, text) {
	if (elem == null) return;
	if (IE) elem.innerText = text;
	else {
	    var hasTextNode = false;
		var children = elem.childNodes;
		for (var i = 0; i < children.length; i++) {
			var child = children[i];
			if (child.nodeType == 3) {
			    child.data = text;
			    hasTextNode = true;
			    break;
			}
		}
		if (!hasTextNode) {
		    var textNode = document.createTextNode(text);
		    elem.appendChild (textNode);  
		}
	}	
}

function getElemById (id) {
    var elem = null
    if (DOM) {
           elem = document.getElementById (id);
    } else if (IE) {
        elem = document.all[id];
    }
    return elem;
}

function addEventHandler (obj, ev, handler) {
	if (IE) 
		obj.attachEvent (ev, handler);
	else {
		obj.addEventListener (ev, handler, false);
	}
}

function getArgs() {
	var args = new Object();
	var query = location.search.substring(1);
	var pairs = query.split("&");
	for (var i = 0; i < pairs.length; i++) {
		var pos = pairs[i].indexOf('=');
		if (pos == -1) continue;
		var argname = pairs[i].substring (0,pos);
		var value = pairs[i].substring (pos+1);
		args[argname] = unescape(value);
	}
	return args;
}

//override this within a page to show context-sensitive help
var helpAnchor = 'top';

function showPopup (url, width, height, top, left, windowname) {
    
    if (windowname == null) windowname = "Contact";
    var pWidth = width == null ? 450 : width;
    var pHeight = height == null ? 500 : height;
    if (left == null) left =  (screen.width - pWidth) / 2;
    if (top == null) top =  (screen.height - pHeight) / 2;
    var args = "width=" + pWidth + ",height=" + pHeight + ",top=" + top + ",left=" + left + ",scrollbars=no" + ",resizable=yes";
    pWindow = window.open(url, windowname, args);
    setPopupTimeout();
}

function showWebsite(url) {
    if (url.indexOf("http://") == -1) url = "http://" + url;
    window.open (url);
}

function showHelp (anchor) {
    if (anchor == null || anchor == "") anchor = helpAnchor;
    helpWindow = window.open (serverURL + "help/Help.html#" + anchor, 'Help', "toolbar=yes,scrollbars=yes,menubar=yes,resizable=yes,location=yes,status=yes,height=575,width=775");
    try {
        helpWindow.focus();
    } catch (e) {
    
    }  
}

function showHelpPopup(url, width, height) {
    url = serverURL + url;
    if (width == null) width = 500;
    if (height == null) height = 400;
    window.open (url, 'Help', "toolbar=yes,scrollbars=yes,menubar=yes,resizable=yes,location=yes,status=yes,height="+height+",width="+width);
}


var problemWindow;

function reportCompanyProblem (url, id) {
    url = url + (url.indexOf('?') == -1 ? "?" : "&" ) + "id=" + id;
    var args = "toolbar=no,scrollbars=yes,menubar=no,resizable=yes,location=no,status=no,height=700,width=700";
    var left =  150;
    var top =  150;
    args += ",top=" + top + ",left=" + left;
    problemWindow = window.open (url, 'Problem', args);
    try {
        problemWindow.focus();
    } catch (e) {
    
    }  
}

function reportContactProblem (url, id) {
    url = url + (url.indexOf('?') == -1 ? "?" : "&" ) + "id=" + id;
    var args = "toolbar=no,scrollbars=no,menubar=no,resizable=yes,location=no,status=no,height=475,width=575";
    var left =  (screen.width - 475) / 2;
    var top =  (screen.height - 575) / 2;
    args += ",top=" + top + ",left=" + left;
    problemWindow = window.open (url, 'Problem', args);
    try {
        problemWindow.focus();
    } catch (e) {
    
    }  
}


function showUploadHelp (anchor) {
    helpWindow = window.open ("help/UploadHelp.html#" + anchor, 'Help', "toolbar=yes,scrollbars=yes,menubar=yes,resizable=yes,location=yes,status=yes,height=500,width=700");
    try {
        helpWindow.focus();
    } catch (e) {
    
    }    
}

function doClear (form) {
    if (form == null) form = document.forms[0];
    if (form == null) return;
    for (var i = 0; i < form.elements.length; i++) {
        var field = form.elements[i];
        if (field.type != 'hidden') {
            if (field.type == 'select-one') {
                field.selectedIndex = 0;
            } else if (field.type == 'text') {
                field.value = "";
            } else if (field.type == 'checkbox') {
                field.checked = false;
            }
        }
    }
}

function validateField (field, fieldname) {
    var msg = "";
    if (field.value == null || trim(field.value) == "") {
        firstField = firstField == null ? field : firstField;
        msg += "\n-" + fieldname;
    }
    return msg;
}

function trim(s) {
    if (s == null || s == "") return "";
    return ltrim(rtrim(s));
}

function ltrim(s) {
	var re = /^\s */;
	return s.replace(re, '');
}

function rtrim(s) {
	var re = /\s *$/;
	return s.replace(re, '');
}

function setSelectValue(select, value) {
    if (select == null) return;
    if (!is_mac) {
        select.value = value;
        return;
    }
    for (var i = 0; i < select.options.length; i++) {
        if (select.options[i].value == value)
              select.options[i].selected = true;
    }
    
}

function showLeaderboard (url) {
    window.location.href = url;
}

function isValid (s) {
    if (s != null && trim(s) != "")
        return true;
}

function js_encodeURIComponent (s) {
    if (typeof encodeURIComponent == "function") {
		return encodeURIComponent(s);
	}
	else {
		return escape(s);
	}
}

function isValidDate(s) {
    if (s == "") return true;
    var format = /\d{1,2}\/\d{1,2}\/\d{4}/;
    if (s.length > 10 || s.length < 8 || s.match(format) == null) return false;  
    return true; 
}

function dayExists (s) {
    if (s == "") return true;
    var nums = s.split('/');
    if (nums.length != 3) return false;
    var month = nums[0] * 1;
    if (month < 1 || month > 12) return false;
    var year = nums[2] * 1;
    //if (year < 2004 || year > 2005) return false;
    var day = nums[1] * 1;
    if (!isValidDay (day, month, year)) return false;
    return true;
}

function isValidDay (day, month, year) {
    if (day < 1) return false;
    var numDays = 31;
    if (month == 2) {
        numDays = isLeapYear(year) ? 29 :28;
    }
    if (month == 4 || month == 6 || month == 9 || month == 11) {
        numDays = 30;
    }
    return day <= numDays;
}

function isLeapYear(year) {
    return (year - 2000) % 4 == 0;
}

function isAfter(d1, d2) {
    //returns true if day 1 comes after day 2
    var nums1 = d1.split('/');
    if (nums1.length != 3) return false;
    var nums2 = d2.split('/');
    if (nums2.length != 3) return false;
    var month1 = nums1[0] * 1;
    var year1 = nums1[2] * 1;
    var day1 = nums1[1] * 1;
    
    var month2 = nums2[0] * 1;
    var year2 = nums2[2] * 1;
    var day2 = nums2[1] * 1;
    
    if (year1 > year2) {
        return true;
    } else if (year1 < year2) {
        return false;
    } else if (month1 > month2) {
       return true;
    } else if (month1 < month2) {
        return false;
    } else if (day1 > day2) {
        return true;
    } else return false;
    
}

</script>
<map name="home"><area name="area1" coords="25,10,140,90" href="file:///">

</map>

<div class="clr"></div>
<h1 class="appName">Build a List</h1>


<div class="clr"></div>

</div>
            <form name="SearchAcrossCompaniesForm" method="post" action="https://www.jigsaw.com/SFL.xhtml" onsubmit="validateForm(this)" target="jswin">
            
                                        <input name="sfsession" value="{!API.Session_ID}" type="hidden">
					          		    <input name="sfserver" value="{!API.Partner_Server_URL_60}" type="hidden">
					          		    <input name="sfuserid" value="{!User.Id}" type="hidden">
					          		    <input name="sfusername" value="{!User.Username}" type="hidden">
            
            

            <input name="opCode" value="search" type="hidden">
            <input name="orderby" value="0" type="hidden">
            <input name="order" value="0" type="hidden">
            <input name="nextURL" value="" type="hidden">
            <input name="mode" value="0" type="hidden">
            <input name="countryvalue" type="hidden">
            <input name="statevalue" type="hidden">
            <input name="metrovalue" type="hidden">
            <input name="indvalue" type="hidden">
            <input name="subindvalue" type="hidden">
            

<table border="0" cellpadding="0" width="1000">
<tbody><tr>
<td style="width: 800px;">
<div id="lCol">
<div id="pgHd">
	<div><script>




function expand(){

	document.getElementById('srchSvdLnks').style.visibility='visible';

}

function collapse(){
	document.getElementById('srchSvdLnks').style.visibility="hidden";

}

function goURL(newUrl){
document.location.href = newUrl;
}
</script>





	
	 <div id="cntctPrmry" class="sumBox" style="border:1px solid;">
		<div class="sumCon" >

<div id="cntctFrmStrt">
				
			</div>
		
			<div class="sumPad" >
				

				<div class="clr">&nbsp;</div>
				<div class="inptGrp" style="padding-top:0px;">

					<div id="cntctTitl" style="padding-top:0px;">
						<div id="cntctTitlLbl"  class="inptGrp" >
							<label for="cnTitle"><strong>Title</strong></label>
						</div>
						<div id="cntctTitlFld">
							<input type="text" name="cnTitle" value="" onkeypress="submitEnter(this.form, event)" id="cnTitle">
						</div>
					</div>

			
					<div id="cntctNam" class="inptGrp">
						<div id="cntctNamLbl">
							<label for="cnName"><strong>Last Name</strong></label>
						</div>
						<div id="cntctNamFld">
							<input type="text" name="cnName" value="" onkeypress="submitEnter(this.form, event)" id="cnName">
						</div>
					</div>

					<div id="cntctCmpy" class="inptGrp">
						<div id="cntctCmpyNameLbl">
							<label for="cmName"><strong>Company Name</strong></label>
						</div>
						<div id="cntctCmpyNameFld">
							<input type="text" name="cmName" value="" onkeypress="submitEnter(this.form, event)" id="cmName">
						</div>
					</div>

				</div>
				
				<div id="cntctRank" class="inptGrp">
					<div id="cntctRankLbl">
						<label for="cnRank"><strong>Level</strong></label>
					</div>
					<div id="cntctRankFld">
									<select name="cnRank" multiple="multiple" size="8"><option value="">-Any-</option>
<option value="10">C-Level</option>

<option value="20">VP-Level</option>
<option value="30">Director-Level</option>
<option value="40">Manager-Level</option>
<option value="500">Other</option></select>
					</div>
				</div>
			
				<div id="cntctDept" class="inptGrp">
					<div id="cntctDeptLbl">
						<label for="cnDept"><strong>Department</strong></label>

					</div>
					<div id="cntctDeptFld">
									<select name="cnDept" multiple="multiple" size="8"><option value="">-Any-</option>
<option value="10">Sales</option>
<option value="20">Marketing</option>
<option value="30">Finance &amp; Administration</option>
<option value="40">Human Resources</option>

<option value="50">Support</option>
<option value="60">Engineering &amp; Research</option>
<option value="70">Operations</option>
<option value="80">IT &amp; IS</option>
<option value="500">Other</option></select>
					</div>
				</div>

				
				<div id="cntctDead" class="inptGrpRt" style="padding-top:10px;">
				
				
							<button type="submit" style="margin-left:0px;" class="btnGo" value="G0" name="GO" alt="GO">GO</button>
				
								<a href="javascript:doClearAdvanced();" class="txt">Clear</a>
						<div style="margin-top:50px;">&nbsp;</div>
					
					<div id="cntctOwndFld" class="flt" >
						<input type="checkbox" name="cnDead" value="on" id="cnDead" class="checkbox">	
					</div>
					<div id="cntctDeadLbl" class="flt chckLbl">
						<label for="cnDead">Include Graveyard Contacts</label>
					</div>
					<div class="clr"></div>
				</div>

				<div class="clr">&nbsp;</div>
			</div>
		</div>
	</div>


	
	<div id="cntctLoc" class="frmBox">
		<div class="frmCon">
			<div class="frmPad">
				<div class="cntctHdrHd"><h3>Location</h3></div>
				<div class="hdrMsg">Ctrl-click for Multiple Selections</div>
				<div class="clr">&nbsp;</div>
				
				<div id="cntctCntry" class="inptGrp">
					<div id="cntctCntryLbl">
						<label for=""><strong>Country</strong></label>
					</div>
					<div id="cntctCntryFld">
						<select name="cnCountry" multiple="multiple" size="8" onchange="doMetroChange();" id="cnCountry"><option value="">-Any-</option><option value="9000">USA</option><option value="1000">Australia</option><option value="2000">Canada</option><option value="3000">India</option><option value="4000">Ireland</option><option value="5000">New Zealand</option><option value="6000">Singapore</option><option value="7000">South Africa</option><option value="8000">United Kingdom</option></select>
					</div>
				</div>

				<div id="cntctStates" class="inptGrp">
					<div id="stateLabel">
						<label for="cnStates"><strong>State</strong></label>
					</div>
					<div id="cntctStatesFld">
						<select name="cnStates" multiple="multiple" size="8" onchange="handleStateChange();" id="cnStates"><option value=""></option></select>
					</div>
				</div>
				
				<div id="cntctMetro" class="inptGrp">
					<div id="metroLabel">
						<label for="cnMetro"><strong>Metro Area</strong></label>
					</div>
					<div id="cntctMetroFld">
						<select name="cnMetro" multiple="multiple" size="8" onchange="handleMetroChange(this)" id="cnMetro"><option value="0"></option></select>
					</div>
				</div>
				
				
				
				<div id="cntctArea" class="inptGrpRt">
					<div id="areaLabel">
						<label for="cnArea1"><strong>Area Code(s)</strong></label>
					</div>
					<div id="cntctAreaFld">
						<input name="cnArea1" value="" onkeypress="submitEnter(this.form, event)" class="txt" type="text">
					</div>
					<div id="zipLabel" style="padding-top: 15px;" cnzip=""><strong>Zip Code(s)</strong>
					</div>
					<div id="cntctZipFld">
						<input name="cnZip" value="" onkeypress="submitEnter(this.form, event)" class="txt" type="text">
					</div>
					<div id="cntctLocTxt">
						<p class="bluMsg">Separate multiple area codes and zip codes with commas or spaces.</p>
					</div>
				</div>
				<div class="clr">&nbsp;</div>
			
		
			</div>
		</div>
	</div>
		
	<div id="cntctCmpyDtls" class="frmBox">
		<div class="frmCon">
			<div class="frmPad">
				<div class="cntctHdrHd"><h3>Company Details</h3></div>
				<div class="hdrMsg">Ctrl-click for Multiple Selections</div>
				<div class="clr">&nbsp;</div>
				
				<div id="cntctCmpyIndy" class="inptGrp">
					<div id="cntctCmpyIndyLbl">
						<label for="cmIndustry"><strong>Industry</strong></label>
					</div>
					<div id="cmtctCmpyIndyFld">
						<select name="cmIndustry" multiple="multiple" size="8" onchange="doIndChange()" id="cmIndustry"><option value="0">-Any-</option><option value="1010000">Agriculture &amp; Mining</option><option value="1020000">Business Services</option><option value="1030000">Computers &amp; Electronics</option><option value="1040000">Conglomerates</option><option value="1050000">Education</option><option value="1060000">Energy &amp; Utilities</option><option value="1070000">Financial Services</option><option value="1080000">Food &amp; Beverage</option><option value="1090000">Government</option><option value="1100000">Healthcare &amp; Pharmaceuticals</option><option value="1110000">Manufacturing</option><option value="1120000">Media &amp; Entertainment</option><option value="1130000">Non-Profit</option><option value="1140000">Real Estate &amp; Construction</option><option value="1150000">Recreation &amp; Leisure</option><option value="1160000">Retail &amp; Wholesale</option><option value="1170000">Services (Miscellaneous)</option><option value="1180000">Software &amp; Internet</option><option value="1190000">Telecommunications</option><option value="1200000">Transportation &amp; Storage</option><option value="1210000">Travel &amp; Accommodation</option><option value="1990000">Other</option></select>
					</div>
				</div>
				
				<div id="cmtctCmpySubIndy" class="inptGrp">
					<div id="cmtctCmpySubIndyLbl">
						<label for="cmSubindustry"><strong><span id="subindustryLabel">Sub-Industry</span></strong></label>
					</div>
					<div id="cmtctCmpySubIndyFld">
						<select disabled="disabled" name="cmSubindustry" multiple="multiple" size="8" id="cmSubindustry"></select>

					</div>
				</div>
				
				<div id="cmtctCmpyEmp" class="inptGrp">
					<div id="cmtctCmpyEmpLbl">
						<label for="cmEmployees"><strong># Employees</strong></label>
					</div>
					<div id="cmtctCmpyEmpFld">
					<select name="cmEmployees" multiple="multiple" size="8"><option value="0">-Any-</option>
<option value="10">0 - 25</option>
<option value="20">25 - 100</option>
<option value="30">100 - 250</option>
<option value="40">250 - 1000</option>
<option value="50">1K - 10K</option>
<option value="60">10K - 50K</option>
<option value="70">50K - 100K</option>
<option value="80">&gt; 100K</option></select>
					</div>
				</div>
				
				<div id="cmtctCmpyRvnu" class="inptGrpRt">
					<div id="cmtctCmpyRvnuLbl">
						<label for="cmRevenue"><strong>Annual Revenue</strong></label>
					</div>
					<div id="cmtctCmpyRvnuFld">
						<select name="cmRevenue" multiple="multiple" size="8"><option value="0">-Any-</option>
<option value="10">$0 - 1M</option>
<option value="20">$1 - 10M</option>
<option value="30">$10 - 50M</option>
<option value="40">$50 - 100M</option>
<option value="50">$100 - 250M</option>
<option value="60">$250 - 500M</option>
<option value="70">$500M - 1B</option>
<option value="80">&gt; $1B</option></select>
					</div>
				</div>
			
				<div id="cmtctCmpyType" class="inptGrp">
					<div id="cmtctCmpyTypeLbl">
						<label for="cmType"><strong>Ownership</strong></label>
					</div>
					<div id="cmtctCmpyTypeFld">
						<select name="cmType" multiple="multiple" size="8"><option value="0">-Any-</option>
<option value="1">Public</option>
<option value="2">Private</option>
<option value="3">Other</option></select>
					</div>
				</div>
				<div id="cmtctCmpyDmn" class="inptGrp">
					<div id="cmtctCmpyDmnLbl">
						<label for="cmDomain"><strong>Domain Type</strong></label>
					</div>
					<div id="cmtctCmpyDmnFld">
						<select name="cnDomain" multiple="multiple" size="8"><option value="">-Any-</option>
<option value=".com">.com</option>
<option value=".biz">.biz</option>
<option value=".edu">.edu</option>
<option value=".gov">.gov</option>
<option value=".info">.info</option>
<option value=".net">.net</option>
<option value=".org">.org</option></select>
					
					</div>
				</div>
				<div id="cmtctCmpyRank" class="inptGrp">

					<h4><strong>Fortune Ranking</strong></h4>
					<div id="cmtctCmpyRankAnyFld" class="flt">
					<input name="cmFortune" value="0" checked="checked" id="cmtctCmpyRankAny" style="background-color: rgb(230, 230, 230) ! important;" class="bgInherit" type="radio">
					</div>
					<div id="cmtctCmpyRankAnyLbl" class="flt rdoLbl">
						<label for="cmtctCmpyRankAny">Any</label>
					</div>
					<div class="clr">&nbsp;</div>
					<div id="cmtctCmpyRank500Fld" class="flt">
						<input name="cmFortune" value="500" id="cmtctCmpyRank500" style="background-color: rgb(230, 230, 230) ! important;" class="bgInherit" type="radio">
					</div>
					<div id="cmtctCmpyRank500Lbl" class="flt rdoLbl">
						<label for="cmtctCmpyRank500">Fortune 500</label>
					</div>
					<div class="clr">&nbsp;</div>
					<div id="cmtctCmpyArea1000Fld" class="flt">
						<input name="cmFortune" value="1000" id="cmtctCmpyRank1000" style="background-color: rgb(230, 230, 230) ! important;" class="bgInherit" type="radio">
					</div>
					<div id="cmtctCmpyRank1000Lbl" class="flt rdoLbl">
						<label for="cmtctCmpyRank1000">Fortune 1000</label>
					</div>
					<div class="clr">&nbsp;</div>
				</div>
				<div class="clr">&nbsp;</div>
			</div>
		</div>
	</div>


</div>



<div style="margin-left:620px;">
	<div class="btn" style="float:left;">
		<button type="submit" class="btnGo" value="G0" name="GO" alt="GO">GO</button>
	</div>
	<div class="txtLnk" style="float:left;margin-top:10px;">
			<a href="javascript:doClearAdvanced();" class="txt">Clear</a><br>
	</div>
</div>
<div class="clr"></div>
</div>
</div></div></td>
<td align="left" valign="top">

</td>
</tr>
</tbody></table>

</form></div>

<script>

function submitEnter (form, e) {

    var keycode;
    if(window.event) { 
        keycode = window.event.keyCode
    } else if(e) { 
        keycode = e.which;
    }
    if(keycode == 13 && validateForm(form)) {
        form.submit();
        try {
           if (window.event)  window.event.cancelBubble = true;
        } catch(ex) {}
    }
}


var form = document.forms[0];
var ind1Value = '';
var ind2Value = '';
var countryValue = '';
var metroValue = '';
var stateValue = '';
var subindustryLabel = document.getElementById('subindustryLabel');
var ind1 = form.cmIndustry;
var ind2 = form.cmSubindustry;
var country = form.cnCountry;
var metro = form.cnMetro;
var state = form.cnStates;
var metroField = document.getElementById('cnMetro');


var firstField = null;

function validateForm (form) {

    form.opCode.value = "search";
	var origMessage = "";
    var msg = origMessage;
    var valid = false
    firstField = null;
    if (form.cnTitle != null && trim(form.cnTitle.value) != "")
        valid = true;
    if (form.cnName != null && trim(form.cnName.value) != "")
        valid = true;
	if (form.cmName != null && trim(form.cmName.value) != "")
        valid = true;
    if (form.cnZip != null && trim(form.cnZip.value) != "") 
        valid = true;
	if (form.cnCountry != null && trim(form.cnCountry.value) != "") {
	    valid = true;
    }
    if (form.cnMetro != null && trim(form.cnMetro.value) != "") {
	     valid = true;
    }
    
    form.countryvalue.value = trim(form.cnCountry.value);
    form.metrovalue.value = trim(form.cnMetro.value);
	form.statevalue.value = getStateString(form.cnStates);
	form.indvalue.value = trim(form.cmIndustry.value);
	form.subindvalue.value = trim(form.cmSubindustry.value);
     
    if (form.cnDept != null && trim(form.cnDept.value) != "") 
        valid = true;
    if (form.cnRank != null && trim(form.cnRank.value) != "")
        valid = true;
    if (form.cmIndustry != null && trim(form.cmIndustry.value) !=  0) {
        valid = true;
    }
    if (form.cmSubindustry != null && trim(form.cmSubindustry.value) !=  0) {
        valid = true;
    }
    
	if (form.cnDomain != null && trim(form.cnDomain.value) !=  0) {
        valid = true;
    }
	if (form.cnDead != null && (form.cnDead.checked == true))
		valid = true;

    if (form.cnArea1 != null && trim(form.cnArea1.value) != "") {
        valid = true;
    }
	if (form.cmType != null && trim(form.cmType.value) !=  0) {
        valid = true;
    }
	if (form.cmFortune != null && trim(form.cmFortune.value) !=  0) {
        valid = true;
    }
	if (form.cmEmployees != null && trim(form.cmEmployees.value) !=  0) {
        valid = true;
    }
	if (form.cmRevenue != null && trim(form.cmRevenue.value) !=  0) {
        valid = true;
    }
    return valid;
}



</script>


</body></html>